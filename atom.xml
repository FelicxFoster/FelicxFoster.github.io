<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YOLOのBLOG</title>
  
  
  <link href="https://blog.felicx.eu.org/atom.xml" rel="self"/>
  
  <link href="https://blog.felicx.eu.org/"/>
  <updated>2025-08-10T13:10:36.000Z</updated>
  <id>https://blog.felicx.eu.org/</id>
  
  <author>
    <name>felicx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>exe 反编译源码</title>
    <link href="https://blog.felicx.eu.org/1844880606.html"/>
    <id>https://blog.felicx.eu.org/1844880606.html</id>
    <published>2025-08-10T13:02:36.000Z</published>
    <updated>2025-08-10T13:10:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>当遇到丢失源码的Python打包exe程序时，我们可能需要逆向分析其逻辑。整个过程无需依赖反编译工具，借助AI即可完成（感谢强大的AI）。</p><hr><h3 id="使用pyinstxtractor解包exe"><a href="#使用pyinstxtractor解包exe" class="headerlink" title="使用pyinstxtractor解包exe"></a>使用pyinstxtractor解包exe</h3><ol><li><p><strong>安装工具</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstxtractor</span><br></pre></td></tr></table></figure></li><li><p><strong>解包exe文件</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pyinstxtractor myapp.exe</span><br></pre></td></tr></table></figure><p>执行后生成<code>myapp.exe_extracted</code>文件夹，其中包含：</p><ul><li><code>.pyc</code>文件（编译后的字节码）</li><li>依赖库和资源文件</li></ul></li><li><p><strong>关键文件定位</strong>：<br>在解包目录中寻找<code>PYZ-00.pyz_extracted</code>文件夹，主程序的pyc文件通常位于此处（如<code>myapp.pyc</code>）</p></li></ol><hr><h3 id="pyc文件反编译"><a href="#pyc文件反编译" class="headerlink" title="pyc文件反编译"></a>pyc文件反编译</h3><p>使用以下脚本读取pyc并反编译为字节码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dis</span><br><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompile_pyc</span>(<span class="params">pyc_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(pyc_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 跳过pyc文件头（不同Python版本头长度不同）</span></span><br><span class="line">        f.seek(<span class="number">16</span>)  <span class="comment"># Python 3.7+ 使用16字节头</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            code = marshal.load(f)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;⚠️ 文件头可能不匹配，尝试12字节偏移...&quot;</span>)</span><br><span class="line">            f.seek(<span class="number">12</span>)</span><br><span class="line">            code = marshal.load(f)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将字节码输出到文件</span></span><br><span class="line">    bytecode_path = pyc_path.replace(<span class="string">&#x27;.pyc&#x27;</span>, <span class="string">&#x27;_bytecode.txt&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(bytecode_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> out:</span><br><span class="line">        sys.stdout = out</span><br><span class="line">        dis.dis(code)</span><br><span class="line">        sys.stdout = sys.__stdout__</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;✅ 字节码已保存至: <span class="subst">&#123;bytecode_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> bytecode_path</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用示例</span></span><br><span class="line">bytecode_file = decompile_pyc(<span class="string">&quot;myapp.pyc&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>关键说明</strong>：</p><ol><li>文件头偏移量根据Python版本调整：<ul><li>Python 3.7+：16字节</li><li>Python 3.3-3.6：12字节</li><li>更旧版本：8字节</li></ul></li><li>若遇到<code>ValueError</code>，可尝试不同偏移量</li></ol><hr><h3 id="通过AI还原源码（DeepSeek示例）"><a href="#通过AI还原源码（DeepSeek示例）" class="headerlink" title="通过AI还原源码（DeepSeek示例）"></a>通过AI还原源码（DeepSeek示例）</h3><ol><li><strong>打开 <a href="https://www.deepseek.com/">DeepSeek AI</a></strong></li><li><strong>输入提示词</strong>：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请将以下Python字节码还原为可读的Python源码：</span><br><span class="line">（粘贴bytecode.txt中的全部内容）</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1. 还原函数和变量名称</span><br><span class="line">2. 保持原始逻辑结构</span><br><span class="line">3. 添加必要的注释</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">从Python打包的exe到源码的反编译流程</summary>
    
    
    
    <category term="开发运维" scheme="https://blog.felicx.eu.org/categories/%E5%BC%80%E5%8F%91%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="python" scheme="https://blog.felicx.eu.org/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>CAN 报文故障注入</title>
    <link href="https://blog.felicx.eu.org/1973638084.html"/>
    <id>https://blog.felicx.eu.org/1973638084.html</id>
    <published>2025-07-27T01:33:15.000Z</published>
    <updated>2025-07-27T02:56:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在汽车电子系统开发中，网关作为不同CAN网络间的桥梁至关重要。而故障注入测试则是验证ECU通信鲁棒性和安全性的核心手段。通过CANoe软件结合CAPL编程，我们能够高效构建虚拟网关并实现精准的报文故障注入。本文将深入解析从基础搭建到高级故障注入的完整技术方案。</p><hr><h2 id="故障注入原理"><a href="#故障注入原理" class="headerlink" title="故障注入原理"></a>故障注入原理</h2><p>汽车网关核心功能是协调不同网络间的通信（如CAN、CAN FD、LIN）。传统物理网关开发周期长且修改困难，而CANoe的虚拟网关方案通过软件模拟实现了灵活配置：</p><ul><li><strong>故障注入目的</strong>：模拟通信异常（如信号篡改、DoS攻击、E2E校验破坏），验证ECU的容错机制</li><li><strong>核心原理</strong>：将CANoe作为“中间人”，截获并修改流经网关的报文。例如：剪断ECU间物理线路，分别接入CANoe的Channel 1和Channel 2，形成逻辑隔离</li></ul><blockquote><p><strong>应用场景</strong>：控制器功能安全测试（ISO 26262）、网络安全渗透测试、总线负载压力验证</p></blockquote><hr><h2 id="CANoe网关搭建"><a href="#CANoe网关搭建" class="headerlink" title="CANoe网关搭建"></a>CANoe网关搭建</h2><h3 id="硬件连接与工程配置"><a href="#硬件连接与工程配置" class="headerlink" title="硬件连接与工程配置"></a>硬件连接与工程配置</h3><ul><li><p><strong>硬件拓扑</strong>：</p><pre class="mermaid">  graph LR  ECU1[ECU1] -->|原CAN线剪断| CANoe_CH1  ECU2[ECU2] -->|原CAN线剪断| CANoe_CH2  CANoe_CH1 -- 转发逻辑 --> CANoe_CH2</pre><p>使用DB9接口或OBD转接头连接物理CAN线到CANoe硬件通道</p></li><li><p><strong>工程配置</strong>：</p><ol><li>新建工程并添加两个CAN通道（如CAN1、CAN2）</li><li>加载DBC文件至对应通道，确保信号定义一致</li><li>创建Gateway节点，关联双通道（Buses设置为CAN1+CAN2）</li></ol></li></ul><h3 id="基础透传CAPL脚本"><a href="#基础透传CAPL脚本" class="headerlink" title="基础透传CAPL脚本"></a>基础透传CAPL脚本</h3><p>实现报文双向转发是故障注入的基础：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 基础透传示例 */</span></span><br><span class="line">on message CAN1.* &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.DIR == RX) &#123;  <span class="comment">// 仅处理接收帧</span></span><br><span class="line">    message CAN2.* msg = <span class="keyword">this</span>;</span><br><span class="line">    <span class="built_in">output</span>(msg);       <span class="comment">// 转发至CAN2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">on message CAN2.* &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.DIR == RX) &#123;</span><br><span class="line">    message CAN1.* msg = <span class="keyword">this</span>;</span><br><span class="line">    <span class="built_in">output</span>(msg);       <span class="comment">// 转发至CAN1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此脚本确保非目标报文无损穿透网关</p><hr><h2 id="故障注入类型"><a href="#故障注入类型" class="headerlink" title="故障注入类型"></a>故障注入类型</h2><h3 id="信号篡改攻击"><a href="#信号篡改攻击" class="headerlink" title="信号篡改攻击"></a>信号篡改攻击</h3><p>针对特定ID报文中的信号值修改：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">on message CAN1<span class="number">.0</span>x506 &#123;  <span class="comment">// 截获ID=0x506的报文</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.DIR == RX) &#123;</span><br><span class="line">    message CAN2<span class="number">.0</span>x506 msg = <span class="keyword">this</span>;</span><br><span class="line">    msg.SignalA = <span class="number">0x31</span>;    <span class="comment">// 篡改信号值</span></span><br><span class="line">    <span class="comment">// 保留其他信号原始值</span></span><br><span class="line">    <span class="built_in">output</span>(msg);          <span class="comment">// 转发篡改后报文</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>应用场景</strong>：模拟传感器数据异常（如车速信号突变）</p></blockquote><h3 id="报文结构破坏攻击"><a href="#报文结构破坏攻击" class="headerlink" title="报文结构破坏攻击"></a>报文结构破坏攻击</h3><p>通过CAPL函数动态改变报文属性：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改报文长度(DLC)</span></span><br><span class="line"><span class="built_in">TestSetMsgDLC</span>(MessageID_0x200, <span class="number">4</span>);  <span class="comment">// 强制DLC=4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改发送周期</span></span><br><span class="line"><span class="built_in">TestSetMsgCycleTime</span>(MessageID_0x301, <span class="number">300</span>); <span class="comment">// 周期改为300ms</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁止报文发送</span></span><br><span class="line"><span class="built_in">TestDisableMsg</span>(MessageID_0x400);    <span class="comment">// 模拟报文丢失</span></span><br></pre></td></tr></table></figure><h3 id="高级E2E校验攻击"><a href="#高级E2E校验攻击" class="headerlink" title="高级E2E校验攻击"></a>高级E2E校验攻击</h3><p>在篡改信号后重新计算CRC以绕过接收方校验：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">on message CAN1<span class="number">.0</span>x600 &#123;</span><br><span class="line">  message CAN2<span class="number">.0</span>x600 msg = <span class="keyword">this</span>;</span><br><span class="line">  msg.SafetyCriticalSignal = <span class="number">999</span>; <span class="comment">// 篡改关键信号</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 基于篡改后值重新计算CRC</span></span><br><span class="line">  dword newCRC = <span class="built_in">Calculate_E2ECRC</span>(msg);</span><br><span class="line">  msg.Counter = (msg.Counter + <span class="number">1</span>) % <span class="number">16</span>;  <span class="comment">// 更新计数器</span></span><br><span class="line">  msg.CRC = newCRC;                     <span class="comment">// 更新校验域</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">output</span>(msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>关键点</strong>：需在DBC中定义E2E协议规则（如AUTOSAR E2E Profile）</p></blockquote><h3 id="定时攻击场景"><a href="#定时攻击场景" class="headerlink" title="定时攻击场景"></a>定时攻击场景</h3><p>控制故障注入的精确时间窗口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">variables &#123;</span><br><span class="line">  msTimer faultTimer;</span><br><span class="line">  <span class="type">int</span> injectActive = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">on timer faultTimer &#123;</span><br><span class="line">  injectActive = <span class="number">0</span>;  <span class="comment">// 结束注入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">on key <span class="string">&#x27;a&#x27;</span> &#123;  <span class="comment">// 按键触发注入</span></span><br><span class="line">  injectActive = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">setTimer</span>(faultTimer, <span class="number">5000</span>); <span class="comment">// 5秒后自动停止</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">on message CAN1.* &#123;</span><br><span class="line">  <span class="keyword">if</span>(injectActive &amp;&amp; <span class="keyword">this</span>.id == <span class="number">0x123</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行篡改逻辑</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="测试环境搭建"><a href="#测试环境搭建" class="headerlink" title="测试环境搭建"></a>测试环境搭建</h3><ul><li>仿真模式：使用CANoe <strong>Interactive Generator</strong>模拟节点报文</li><li>监控工具：Trace窗口实时比对原始报文与转发报文</li><li>自动化测试：结合Test Module实现批量用例执行</li></ul><h3 id="故障注入效果验证"><a href="#故障注入效果验证" class="headerlink" title="故障注入效果验证"></a>故障注入效果验证</h3><table><thead><tr><th><strong>注入类型</strong></th><th><strong>预期效果</strong></th><th><strong>验证方法</strong></th></tr></thead><tbody><tr><td>信号篡改</td><td>接收ECU行为异常（如误报警）</td><td>监控ECU状态机跳转</td></tr><tr><td>报文超时</td><td>接收端触发Timeout DTC</td><td>诊断仪读取故障码</td></tr><tr><td>E2E校验错误</td><td>ECU拒收报文并记录CRC错误</td><td>跟踪接收计数器变化</td></tr><tr><td>DLC异常</td><td>接收ECU丢弃报文或进入安全状态</td><td>总线负载率分析</td></tr></tbody></table><h3 id="安全防护验证"><a href="#安全防护验证" class="headerlink" title="安全防护验证"></a>安全防护验证</h3><p>通过报警网关检测注入攻击：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 网关内嵌攻击检测逻辑</span></span><br><span class="line">on message * &#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.DLC &gt; <span class="number">8</span>) &#123;  <span class="comment">// 检测DLC超限</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="string">&quot;DoS攻击警报！ID:%x&quot;</span>, <span class="keyword">this</span>.id);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">checkSpoofing</span>(<span class="keyword">this</span>)) &#123;  <span class="comment">// 假扮攻击检测</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="string">&quot;假扮ECU攻击！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="工程实践技巧"><a href="#工程实践技巧" class="headerlink" title="工程实践技巧"></a>工程实践技巧</h2><h3 id="路由表管理"><a href="#路由表管理" class="headerlink" title="路由表管理"></a>路由表管理</h3><p>使用<code>Database::Lookup</code>动态获取报文属性，避免硬编码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message * msg = &#123;<span class="built_in">DBLookup</span>(<span class="string">&quot;LightStatus&quot;</span>)&#125;;</span><br><span class="line">msg.id = <span class="built_in">getSignal</span>(<span class="string">&quot;TargetID&quot;</span>);  <span class="comment">// 从面板动态获取ID</span></span><br></pre></td></tr></table></figure><h3 id="故障注入面板设计"><a href="#故障注入面板设计" class="headerlink" title="故障注入面板设计"></a>故障注入面板设计</h3><ul><li>通道选择下拉菜单（CAN1→CAN2 &#x2F; CAN2→CAN1）</li><li>报文ID列表（支持多选）</li><li>信号编辑器（支持表达式如<code>rand()</code>）</li><li>E2E校验使能开关</li></ul><h3 id="自动化测试集成"><a href="#自动化测试集成" class="headerlink" title="自动化测试集成"></a>自动化测试集成</h3><p>结合.vTESTstudio实现全自动故障注入测试：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TEST CASE <span class="string">&quot;Fault Injection&quot;</span> &#123;</span><br><span class="line"><span class="built_in">SET_FAULT_PARAM</span>(ID=<span class="number">0x123</span>, Signal=<span class="string">&quot;Torque&quot;</span>, Value=<span class="number">2000</span>);</span><br><span class="line"><span class="built_in">START_INJECTION</span>();</span><br><span class="line">WAIT <span class="number">5</span> s;</span><br><span class="line"><span class="built_in">CHECK_DTC</span>(DTC_123_1);  <span class="comment">// 验证预期故障码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="实时性瓶颈"><a href="#实时性瓶颈" class="headerlink" title="实时性瓶颈"></a>实时性瓶颈</h3><p><strong>问题</strong>：高负载总线转发延迟导致丢帧<br><strong>方案</strong>：</p><ul><li>优化CAPL脚本（避免<code>while</code>循环）</li><li>启用<code>SetTimerCyclic()</code>替代<code>on message</code>事件</li></ul><h3 id="多通道同步"><a href="#多通道同步" class="headerlink" title="多通道同步"></a>多通道同步</h3><p><strong>问题</strong>：跨通道信号依赖导致逻辑冲突<br><strong>方案</strong>：</p><ul><li>使用<code>putValue()</code>同步环境变量</li><li>全局状态机管理转发逻辑</li></ul><h3 id="真实ECU兼容性"><a href="#真实ECU兼容性" class="headerlink" title="真实ECU兼容性"></a>真实ECU兼容性</h3><p><strong>问题</strong>：仿真网关与物理ECU协议栈差异<br><strong>方案</strong>：</p><ul><li>添加协议层适配（如J1939 TP转发）</li><li>休眠唤醒协调（集成OSEK NM）</li></ul><hr><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>通过CANoe构建虚拟网关实现故障注入，工程师能在早期验证系统安全边界与容错机制。随着智能网联汽车复杂度提升，此类技术将成为E&#x2F;E架构开发的标准手段。建议进一步探索：</p><ul><li><strong>AI驱动的自适应故障注入</strong>（基于模型预测异常）</li><li><strong>混合型攻击场景</strong>（如DoS+重放组合攻击）</li><li><strong>与信息安全联动</strong>（基于ISO&#x2F;SAE 21434的渗透测试）</li></ul><blockquote><p><strong>参考</strong>：</p><ul><li><a href="https://vector.com/capl">CAPL API参考手册</a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">CANoe制作网关实现CAN报文故障</summary>
    
    
    
    <category term="自动驾驶" scheme="https://blog.felicx.eu.org/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
    <category term="can" scheme="https://blog.felicx.eu.org/tags/can/"/>
    
  </entry>
  
  <entry>
    <title>BitTorrent 技术解析</title>
    <link href="https://blog.felicx.eu.org/2919340134.html"/>
    <id>https://blog.felicx.eu.org/2919340134.html</id>
    <published>2025-07-20T07:31:20.000Z</published>
    <updated>2025-07-26T09:06:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经常在网上飙车的老司机应该都知道BT下载，但是有时候拿到了种子却下载不动，会不会很抓狂，是不是还觉得是自己网不行，那作为一个合格的老司机，我们需要探究一下下载不动的原因是什么，BT 的运作方式是怎样的，如果你也有这样的疑惑，那么，系好安全带，我们一起来了解一下什么是 BT。</p><h2 id="从-P2P-说起"><a href="#从-P2P-说起" class="headerlink" title="从 P2P 说起"></a>从 P2P 说起</h2><p>P2P 有着很广泛的应用，比如P2P金融（雾），区块链，BT下载等。它的关键字是去中心化，依靠用户群（Peers）来互相传输数据，符合这种特征的都可以称之为P2P。</p><p>BitTorrent（简称BT）由 Bram Cohen 于2001年提出，其核心思想是通过去中心化的用户协作实现大文件高效分发。与传统HTTP依赖单一服务器不同，BT将文件传输负担分散到参与下载的所有用户节点（Peer）上，实现“下载即上传，人人为我，我为人人”的共享模式。这一设计显著降低了服务器带宽压力，并在用户规模增大时形成正反馈效应——参与者越多，整体下载速度越快。</p><h2 id="种子文件"><a href="#种子文件" class="headerlink" title="种子文件"></a>种子文件</h2><p>大家肯定有在互联网上下载各种资源的经历，比如电影电视剧，我们在网上一搜，就会搜到一些不知名的小网站，网站上通常会提供一个叫做「种子」的东西，我们使用时只需要把种子下载到电脑上，通常是一个后缀为<code>.torrent</code>的文件， 然后用迅雷或者其他的下载工具下载。</p><p>种子文件是采用 Bencode 编码的元数据文件，Bencode 编码规范如下</p><table><thead><tr><th>数据类型</th><th>编码规则</th><th>示例</th></tr></thead><tbody><tr><td>字符串</td><td>长度:内容</td><td>“hello” → “5:hello”</td></tr><tr><td>整数</td><td>i数字e</td><td>123 → “i123e”</td></tr><tr><td>列表</td><td>l元素e</td><td>[1,”a”] → “li1e1:ae”</td></tr><tr><td>字典</td><td>d排序键值对e</td><td>{“b”:2,”a”:1} → “d1:ai1e1:bi2ee”</td></tr></tbody></table><p>种子文件核心字段包括</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;announce&quot;</span>: <span class="string">&quot;https://tracker.example.com&quot;</span>,  <span class="comment"># Tracker主地址</span></span><br><span class="line">  <span class="string">&quot;announce-list&quot;</span>: [[<span class="string">&quot;备用Tracker&quot;</span>]],         <span class="comment"># 备用Tracker</span></span><br><span class="line">  <span class="string">&quot;info&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;文件名&quot;</span>,</span><br><span class="line">    <span class="string">&quot;piece length&quot;</span>: <span class="number">262144</span>,                  <span class="comment"># 分块大小(通常256KB)</span></span><br><span class="line">    <span class="string">&quot;pieces&quot;</span>: [<span class="string">&quot;sha1哈希值列表&quot;</span>],             <span class="comment"># 分块校验码</span></span><br><span class="line">    <span class="string">&quot;length&quot;</span>: 文件总字节数,</span><br><span class="line">    <span class="string">&quot;files&quot;</span>: [&#123;<span class="string">&quot;path&quot;</span>:[<span class="string">&quot;目录结构&quot;</span>],<span class="string">&quot;length&quot;</span>:大小&#125;] <span class="comment"># 多文件结构</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个种子文件中的 info.pieces 字段包含了每个小块的哈希值，而每个块的大小都是 256KB。这样就相当于把下载任务分解了，分解成了下载若干个大小为 256KB 的小块的任务。采用并发的方式去依次请求每个块的数据，然后计算好数据的位置放进最终结果中返回，然后把内存中的数据写入硬盘。</p><h2 id="BitTorrent-工作全流程"><a href="#BitTorrent-工作全流程" class="headerlink" title="BitTorrent 工作全流程"></a>BitTorrent 工作全流程</h2><p>简单讲下BT下载的整个流程</p><ol><li>种子发布者制作种子，且向 Tracker 服务器表明，大家要下载这个种子就来找我。（Tracker 的地址就是种子文件中 announce 字段中的 url）；</li><li>种子发布者把做好的种子分享到互联网；</li><li>下载者在互联网上获取到种子文件；</li><li>下载者本地的 BT 客户端解析种子文件，拿到 Tarcker 地址，向 Tarcker 发起请求（HTTP或UDP），获取其他 Peer 的地址；</li><li>Tracker接收到请求后，去自己的存储里找拥有这个种子中的文件的 peers 的 IP:port，返回给下载者，并且把当前下载者的 IP:Port 加入服务器的存储；</li><li>下载者与其他 Peer 建立连接，由于一个文件被分成了若干个文件块，所以下载者可以和多个 Peer 下载不同的块，下载完成后，校验块的哈希值，保存在本地。(这也是下载种子的人越多，下载速度越快的原因)；</li><li>整个文件下载完成时，校验整个文件哈希值，不出意外，下载成功；</li><li>BT客户端不要关闭，自己作为 Peer 服务 BT 网络中的其他人；</li></ol><h3 id="Tracker-的作用"><a href="#Tracker-的作用" class="headerlink" title="Tracker 的作用"></a>Tracker 的作用</h3><p>种子文件中的 announce 字段中包含了一个 url ，这个 url 也就是 tracker 服务器。</p><p>服务器的作用是作为 peers 沟通的桥梁而存在，当下载者要下载某一个资源的时候，就会去向服务器询问，服务器查询之后如果发现自己保存了这个资源的其他节点，就把这些节点的地址返回，然后客户端知道这些 IP:Port 后，就去与其他 Peer 建立连接。</p><p>Tracker 不存储任何具体资源的文件信息，只存储文件的哈希值，来帮助 Peers 来建立连接。</p><h3 id="发布者做种"><a href="#发布者做种" class="headerlink" title="发布者做种"></a>发布者做种</h3><p>种子只有先被制作发布，才能使用。一般来说，使用 BT 下载软件进行做种的时候，下载软件会内置几个 tracker 服务器，当然也可以自己找一些 tarcker 的地址添加进去，BT客户端会向这些 tracker 发起请求。Tracker 服务器就会记录下来上传者的 IP:Port ，以便于传输给后续下载者进行下载。</p><p>那如果下载者要下载的时候，所有拥有这些文件的人都不在线怎么办。那就真没办法了，这种种子也叫「死种」，因为没人上传，这也就是网上很多种子下载不动的原因。</p><h3 id="下载者下载"><a href="#下载者下载" class="headerlink" title="下载者下载"></a>下载者下载</h3><p>下载者与 Trakcer 的通信方式有 UDP 和 HTTP 两种协议，具体使用哪一种，看种子里面包含的信息是 udp 还是 http。下面我们以 HTTP 的方式来进行探究：</p><p>下载者向 Tracker 发起一个 GET 请求，请求的格式包含的关键字段：</p><table><thead><tr><th>Key</th><th>含义</th></tr></thead><tbody><tr><td>info_hash</td><td>文件的哈希值，是一个资源的唯一标志</td></tr><tr><td>peer_id</td><td>由本地客户端自己生成，一个随机20字节的字符串，向网络中的其他Peers标记自己的身份</td></tr><tr><td>Port</td><td>本地客户端的监听接口，用于接收其他Peer发来的消息</td></tr></tbody></table><p>Tracker 接收到 GET 请求后，Tracker服务器就会反连（NatCheck）下载者的IP地址和端口。然后服务器返回现在正在下载这个文件的所有公网用户的IP地址和端口列表，返回给BT客户端。最后如果该用户是公网用户，Tracker服务器会把用户提交的IP地址和端口保存下来，这样其他人就可以找到该用户。</p><p>BT客户端得到这些其他用户IP后，就可以直接连接到这些IP和端口下载资料了。BT客户端会到所有的用户去寻找自己要下载的东西。BT客户端每找到一个用户就建立一个 Socket来下载 ，所以下载的人越多，速度就越快。</p><h3 id="Peer通信协议"><a href="#Peer通信协议" class="headerlink" title="Peer通信协议"></a>Peer通信协议</h3><p>节点间通过 TCP（默认端口6881-6889）或 UTP（基于UDP的拥塞控制协议）传输数据，消息结构如下：</p><table><thead><tr><th>消息类型</th><th>消息ID</th><th>字段说明</th></tr></thead><tbody><tr><td>握手（Handshake）</td><td>-</td><td>协议名（19字节）、InfoHash、Peer ID</td></tr><tr><td>Bitfield</td><td>5</td><td>比特位图（标识已拥有的分块）</td></tr><tr><td>Request</td><td>6</td><td>请求的分块索引、偏移量、长度</td></tr><tr><td>Piece</td><td>7</td><td>分块索引、偏移量、实际数据</td></tr><tr><td>Have</td><td>4</td><td>声明新获得的分块索引</td></tr><tr><td>Choke&#x2F;Unchoke</td><td>0&#x2F;1</td><td>阻塞&#x2F;解阻塞对方下载权限（流量控制）</td></tr></tbody></table><h3 id="校验哈希值"><a href="#校验哈希值" class="headerlink" title="校验哈希值"></a>校验哈希值</h3><p>当下载者收到数据提供者发送过来的二进制数据后，会计算一下这个二进制数据的哈希值，然后和自己的 torrent 文件中的对应块的哈希值进行比较，如果哈希值一样，就代表这块块有效，就保存下来，否则视为无效，会丢弃这个块重新下载。</p><h2 id="BitTorrent-的延伸"><a href="#BitTorrent-的延伸" class="headerlink" title="BitTorrent 的延伸"></a>BitTorrent 的延伸</h2><p>BT下载严重依赖于 Tracker 服务器，那是不是意味着 Tracker 崩了整个 BT 网络就崩了，当然 Tracker 可能不止有一个，多个 Tracker 服务器可以增加 P2P 网络的容错性，那有有没有一种比较优雅的解决方案，来更好的解决这个问题呢？</p><p>为了摆脱对 Tracker 服务器的依赖，彻底去中心化，这时候，DHT 出现了，DHT全称分布式哈希表(Distributed Hash Table)，是一种分布式存储方法。在不需要服务器的情况下，每个节点负责一个小范围的路由，并负责存储一小部分数据，从而实现整个DHT网络的寻址和存储，相当于所有人一起构成了一个庞大的分布式存储数据库。</p><p>在 DHT 网络中每个节点拥有两个角色：</p><ul><li>作为 BT 下载的节点，来进行上传和下载资源；</li><li>作为DHT网络中的一员，作为一个小型 Tracker ，保存一部分其他 Peer 的地址信息；</li></ul><p>DHT 的本质是把所有人都变成一个小型 Tracker，每个人都拿着一份动态更新的地址和文件信息。当需要进行下载的时候，先根据自己本地存的路由表找其他节点，其他节点再去找他们保存的其他节点，直到找到拥有文件的人。一传十十传百、千、万，最后通过N个人的中转，找到应该连上的人。</p><h3 id="磁力链接"><a href="#磁力链接" class="headerlink" title="磁力链接"></a>磁力链接</h3><p>目前最流行的下载方式是磁力链接（Magnet URI scheme）就是基于 DHT 网络的，格式为<code>magnet:?xt=urn:btih:&lt;InfoHash&gt;</code>。</p><p>其中 urn 为统一资源名称，btih 是 BitTorrent Info Hash 的缩写，是 BitTorrent 使用的 Hash 函数。除了 btih 还可以是其他类型的 Hash 函数，但不如 btih 用的多。这一串长度为 40 的字符串正是文件内容的 Hash，BT下载工具就根据这个 Hash 在DHT网络中定位下载文件。</p>]]></content>
    
    
    <summary type="html">BitTorrent核心技术浅析</summary>
    
    
    
    <category term="折腾系列" scheme="https://blog.felicx.eu.org/categories/%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="bt" scheme="https://blog.felicx.eu.org/tags/bt/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox 中 Ubuntu 虚拟机扩容指南</title>
    <link href="https://blog.felicx.eu.org/3761641296.html"/>
    <id>https://blog.felicx.eu.org/3761641296.html</id>
    <published>2025-06-22T08:27:51.000Z</published>
    <updated>2025-06-22T09:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当 Ubuntu 虚拟机的磁盘空间不足时，只需两步：扩展 VDI 磁盘文件，再调整分区和文件系统。本教程提供两种 VDI 扩容方案及详细操作步骤，助你快速解决空间不足问题。</p><h2 id="一、VDI-扩容（两种方案）"><a href="#一、VDI-扩容（两种方案）" class="headerlink" title="一、VDI 扩容（两种方案）"></a>一、VDI 扩容（两种方案）</h2><h3 id="方案1：通过克隆创建新-VDI（兼容性强）"><a href="#方案1：通过克隆创建新-VDI（兼容性强）" class="headerlink" title="方案1：通过克隆创建新 VDI（兼容性强）"></a>方案1：通过克隆创建新 VDI（兼容性强）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入VirtualBox安装目录（Windows）</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&#x27;C:\Program Files\Oracle\VirtualBox&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新VDI（目标大小为 200GB）</span></span><br><span class="line">.\VBoxManage.exe createhd -filename <span class="string">&quot;D:\NewUbuntu\new_ubuntu.vdi&quot;</span> -size 204800 -format VDI -variant Standard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆原VDI到新VDI（前面为原来的VDI，后面为扩大size的VDI）</span></span><br><span class="line">.\VBoxManage.exe clonehd <span class="string">&#x27;D:\原路径\ubuntu.vdi&#x27;</span> <span class="string">&#x27;D:\NewUbuntu\new_ubuntu.vdi&#x27;</span> --existing</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩容新VDI（调整至目标大小）</span></span><br><span class="line">.\VBoxManage.exe modifyhd <span class="string">&#x27;D:\NewUbuntu\new_ubuntu.vdi&#x27;</span> --resize 204800</span><br></pre></td></tr></table></figure><p><img src="/assets/post/20250622_I1xc1zIS.webp" alt="virtualbox"><br>操作后步骤：</p><ol><li>在 VirtualBox 中卸载原 VDI，挂载新 VDI（设置→存储→移除旧盘→添加新盘）</li><li>启动 Ubuntu 验证数据完整性</li></ol><h3 id="方案2：直接扩容原-VDI（更快捷）"><a href="#方案2：直接扩容原-VDI（更快捷）" class="headerlink" title="方案2：直接扩容原 VDI（更快捷）"></a>方案2：直接扩容原 VDI（更快捷）</h3><p>仅适用于动态分配的 VDI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭虚拟机后执行（Windows）</span></span><br><span class="line">.\VBoxManage.exe modifyhd <span class="string">&quot;D:\原路径\ubuntu.vdi&quot;</span> --resize 204800</span><br></pre></td></tr></table></figure><blockquote><p>✅ 说明：动态分配的 VDI 支持直接扩容；固定分配需用方案1克隆转换</p></blockquote><h2 id="二、Ubuntu-分区调整（GParted-操作）"><a href="#二、Ubuntu-分区调整（GParted-操作）" class="headerlink" title="二、Ubuntu 分区调整（GParted 操作）"></a>二、Ubuntu 分区调整（GParted 操作）</h2><h3 id="步骤1：安装-GParted"><a href="#步骤1：安装-GParted" class="headerlink" title="步骤1：安装 GParted"></a>步骤1：安装 GParted</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install gparted -y</span><br></pre></td></tr></table></figure><h3 id="步骤2：调整分区（重点！）"><a href="#步骤2：调整分区（重点！）" class="headerlink" title="步骤2：调整分区（重点！）"></a>步骤2：调整分区（重点！）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gparted  <span class="comment"># 启动图形工具</span></span><br></pre></td></tr></table></figure><ol><li>定位分区：<br><img src="/assets/post/20250622_AFEbZjgt.webp" alt="virtualbox"></li></ol><ul><li>&#x2F;dev&#x2F;sda1：系统主分区（需扩展），是我们原来的大小</li><li>linux-swap：交换分区（通常为 sda2&#x2F;sda5）</li><li>unallocated：扩容后未分配的空间</li></ul><ol start="2"><li>删除交换分区：</li></ol><ul><li>右键 &#x2F;dev&#x2F;sda5 分区 → Swapoff<br><img src="/assets/post/20250622_JE01JH3Q.webp" alt="virtualbox"></li><li>删除 &#x2F;dev&#x2F;sda2<br><img src="/assets/post/20250622_hK0kbWBX.webp" alt="virtualbox"></li></ul><ol start="3"><li>扩展主分区：</li></ol><ul><li>右键 &#x2F;dev&#x2F;sda1 → Resize&#x2F;Move</li><li>拖动滑块将 unallocated 空间合并到 sda1</li><li>关键设置：<ul><li>Align to 选择 MiB（解决无法拖动问题）</li><li>保留约 1GB 空间给新交换分区（非强制）<br><img src="/assets/post/20250622_lcUucBZX.webp" alt="virtualbox"><br><img src="/assets/post/20250622_vFITEThi.webp" alt="virtualbox"><blockquote><p>New size就是新的磁盘大小，Free space就是剩下的给交换空间的，这里给了1g(可能点不了resize，需要点一下Align to选MiB)</p></blockquote></li></ul></li></ul><ol start="4"><li>重建交换分区：</li></ol><ul><li>右键剩余 unallocated → New → 分区类型选 Extended Partition<br><img src="/assets/post/20250622_61ZvKLg6.webp" alt="virtualbox"></li><li>在新扩展分区上创建 linux-swap（文件系统选 linux-swap）<br><img src="/assets/post/20250622_ePQLr1un.webp" alt="virtualbox"></li></ul><ol start="5"><li>应用变更：</li></ol><ul><li>点击✅ → Apply（等待操作完成）<br><img src="/assets/post/20250622_RNIvcVPV.webp" alt="virtualbox"></li></ul><h3 id="步骤3：验证扩容"><a href="#步骤3：验证扩容" class="headerlink" title="步骤3：验证扩容"></a>步骤3：验证扩容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h      <span class="comment"># 查看根分区容量是否增加</span></span><br><span class="line">free -h    <span class="comment"># 检查交换分区是否生效</span></span><br></pre></td></tr></table></figure><h2 id="三、注意事项及常见问题"><a href="#三、注意事项及常见问题" class="headerlink" title="三、注意事项及常见问题"></a>三、注意事项及常见问题</h2><ul><li>必备操作：</li></ul><ol><li>所有 VDI 操作前关闭虚拟机</li><li>扩容前备份重要数据（防操作失误）</li><li>Windows下需以管理员身份运行命令提示符</li></ol><ul><li><p>常见错误：</p></li><li><p>UUID 冲突：克隆 VDI 后需在 VirtualBox 中卸载原盘（防冲突）</p></li><li><p>分区无法调整：检查是否关闭交换分区（Swapoff）</p></li><li><p>文件系统未扩展：扩容分区后需执行 sudo resize2fs &#x2F;dev&#x2F;sda1（ext4分区）</p></li><li><p>替代方案：<br>若GParted操作复杂，可使用终端扩展分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo parted /dev/sda</span><br><span class="line">resizepart 1   <span class="comment"># 1为主分区号</span></span><br><span class="line">Yes</span><br><span class="line">200GB          <span class="comment"># 输入目标大小</span></span><br><span class="line">quit</span><br><span class="line">sudo resize2fs /dev/sda1  <span class="comment"># 扩展文件系统</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="四、结论"><a href="#四、结论" class="headerlink" title="四、结论"></a>四、结论</h2><p>通过 VDI 扩容 + 分区调整，可高效解决 Ubuntu 虚拟机磁盘不足问题：</p><ol><li>VDI扩容优先选直接扩容（方案2），动态分配磁盘首选</li><li>固定分配磁盘必须克隆转换（方案1）</li><li>分区调整推荐 GParted 图形化操作，注意删除交换分区后再扩展主分区</li></ol><blockquote><p>📌 终极建议：创建虚拟机时选择 动态分配 并预留充足空间（如 200GB），避免频繁扩容！</p></blockquote>]]></content>
    
    
    <summary type="html">VirtualBox 安装了 VDI 类型的 Ubuntu，给磁盘空间扩容</summary>
    
    
    
    <category term="开发运维" scheme="https://blog.felicx.eu.org/categories/%E5%BC%80%E5%8F%91%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="linux" scheme="https://blog.felicx.eu.org/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>原本只想擦亮星星，却用一生唤醒太阳</title>
    <link href="https://blog.felicx.eu.org/963147591.html"/>
    <id>https://blog.felicx.eu.org/963147591.html</id>
    <published>2025-05-11T06:10:17.000Z</published>
    <updated>2025-05-11T07:09:20.000Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_57"><div class="nav-tabs"><div class="tab active"><a href="#tab_57-1">个人笔记</a></div><div class="tab"><a href="#tab_57-2">语句摘录</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_57-1"><h4 id="故事的核心：从“小爱”到“大爱”的升华"><a href="#故事的核心：从“小爱”到“大爱”的升华" class="headerlink" title="故事的核心：从“小爱”到“大爱”的升华"></a>故事的核心：从“小爱”到“大爱”的升华</h4><p>《烧火工》是刘慈欣笔下罕见的温情童话，表面上讲述少年萨沙为拯救爱人冰儿踏上冒险之旅的故事，内核却是一场关于人性、责任与宇宙秩序的哲学思辨。</p><p>萨沙的初心是纯粹的个人情感——为了治愈冰儿的绝症，他甘愿与世界尽头的烧火工签订契约，承诺接替其点燃太阳的使命。然而，当冰儿康复后，萨沙并未选择回归俗世，而是留在极东岛成为新一任烧火工。</p><p>这一选择的转折点，恰恰揭示了故事的深层隐喻：爱不仅是私欲的满足，更是一种对更广阔生命的责任感。</p><p>起初，他的行动由“小爱”驱动，带有强烈的功利性；但当他目睹烧火工日复一日的孤独劳作，甚至目睹鲸鱼因人类的“工具理性”而牺牲时（烧火工以鲸骨制笛诱捕鲸鱼，用其脂肪炼油点燃太阳），他逐渐意识到生命的关联性。</p><p>这种关联性超越了个人情感，指向一种宇宙尺度的责任——正如烧火工所言：“如果我们不烧火，黑夜就不会结束。”</p><p>萨沙的选择，本质上是对“存在意义”的重新锚定：从“为一个人活”到“为千万人活”，从“被爱驱使”到“以爱为燃料”。</p><h4 id="烧火工的象征：孤独与使命的悖论"><a href="#烧火工的象征：孤独与使命的悖论" class="headerlink" title="烧火工的象征：孤独与使命的悖论"></a>烧火工的象征：孤独与使命的悖论</h4><p>烧火工的形象充满矛盾：他是人类光明的守护者，却常年与黑暗为伴；他掌握着宇宙的奥秘（擦亮星星、点燃太阳），却过着最原始的生活（挖煤、捕鲸）。</p><p>这种反差暗含对现代文明的反思：真正的奉献往往需要退守到文明的边缘，甚至以牺牲个体幸福为代价。</p><p>烧火工好比古希腊神话中的普罗米修斯，但两者的差异更耐人寻味。</p><p>普罗米修斯盗火是对神权的反抗，充满英雄主义的悲壮；而烧火工的劳作却是静默的、循环的，如同西西弗斯推石上山。这种“无英雄的史诗”更贴近普通人的生存状态——我们或许不必惊天动地，但需在琐碎中坚守本心，默默维护系统运转。</p><h4 id="科幻设定中的诗意与残酷"><a href="#科幻设定中的诗意与残酷" class="headerlink" title="科幻设定中的诗意与残酷"></a>科幻设定中的诗意与残酷</h4><p>刘慈欣将硬核科幻元素融入童话框架，形成独特的张力：</p><ul><li>浪漫想象：月亮是柔软的乳白色球体，星星碰撞发出风铃般声响，登天需用鲸牙制成火箭；</li><li>冰冷现实：鲸鱼因人类的生存需求被工具化（骨为笛、脂为油、皮为屋），太阳的点燃伴随着逃亡般的惊险。</li></ul><p>这种矛盾恰是人类的生存缩影。我们仰望星空时渴望诗意，却不得不面对资源争夺的残酷。</p><p>如果按书中所写，要拯救千万人需牺牲一个物种，这种选择是否正当？刘慈欣未给出答案，却通过萨沙的沉默暗示了现实的复杂性。</p></div><div class="tab-pane" id="tab_57-2"><blockquote><p>“地上的每一个人，在天上都有一颗属于他的星星。如果那颗星星出了毛病，星光照不到那人身上，那人就病了；如果星光长时间暗下去，那人就得了绝症。”<br>“一般人的死法，他们的星星化成流星，大部分在落地前就烧光了，有些剩下的部分落到地上，也不过是一块平淡无奇的石头。”</p></blockquote><p>这两句将人的生命与星辰关联，赋予疾病与死亡以浪漫的象征。星辰的明暗成为生命的晴雨表，而流星的消逝则暗喻凡人生命的平凡与脆弱。这种设定既呼应了“天人感应”的古典哲学，又隐含对现代人存在意义的追问：当个体的光芒被遮蔽时，是否有人愿意为其拭去尘埃？</p><hr><blockquote><p>“月面摸上去细腻光滑，像冰儿的肌肤，这让萨沙心里一动。”<br>“星星不时碰到航行中的月牙，发出悠扬清脆的叮铃声，像夏日微风中的风铃。”</p></blockquote><p>刘慈欣颠覆了月亮坚硬冰冷的常规想象，赋予其柔软与温度。月面的触感与冰儿的肌肤相联，暗示爱情是萨沙冒险的动力；而星星碰撞月牙的“叮铃声”，则将登天之旅化作一场听觉与视觉交织的童话漫游，充满童真与梦幻。</p><hr><blockquote><p>“每天凌晨如果我们不烧火，黑夜就不会结束。”<br>“太阳漆黑一片，像夜的精华……点燃后腾起一片蓝色的火焰，世界从黑夜中复苏。”</p></blockquote><p>太阳的熄灭与点燃象征着生命循环与责任传承。烧火工的工作被赋予神性，却又充满凡人的艰辛——必须“按时烧火，不能早也不能晚”。这种对时间精准性的苛求，暗喻维系世界运转的平凡英雄们不可言说的孤独与坚持。</p><hr><blockquote><p>“鲸鱼因笛声的诱惑冲上海岸，窒息而亡。人们取鲸骨制笛、炼油，用其脂肪点燃太阳。”<br>“大鲸盲目地以为有另一只鲸在等它，满怀希望奔向死亡。”</p></blockquote><p>鲸的悲剧揭示了人类生存的伦理困境：为拯救千万人而牺牲一个物种是否正当？鲸被笛声（爱的谎言）诱捕，与萨沙为爱赴险形成镜像，暗示“爱”既是救赎的起点，也可能成为暴力的借口。这一设定引发对工具理性与生态伦理的反思。</p><hr><blockquote><p>“你懂得爱。”老烧火工对萨沙说，“这和信用无关。”<br>“萨沙抚弄阳光，最欣慰的是这阳光也有冰儿一份。”</p></blockquote><p>萨沙的“爱”从拯救冰儿的私欲升华为守护世界的大爱。老烧火工看透本质：真正的爱不是契约，而是甘愿将个体情感融入更广阔的使命。阳光中的“冰儿一份”将个人幸福与众生光明融为一体，完成从“小我”到“大我”的蜕变。</p><hr><blockquote><p>“火箭爆炸时溅出的火星，像在月亮上放了一个焰火。”<br>“海鸥向日出的地方飞去，太阳越升越高，将云雾烧成朝霞。”</p></blockquote><p>这些场景以极简的笔触勾勒出宏大与渺小的对比。焰火的璀璨转瞬即逝，暗喻登天壮举的偶然与脆弱；海鸥追逐朝阳则象征生命对光明的本能向往，赋予科幻叙事以古典诗画的意境。</p></div></div></div>]]></content>
    
    
    <summary type="html">《烧火工》-- 刘慈欣</summary>
    
    
    
    <category term="读书笔记" scheme="https://blog.felicx.eu.org/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="科幻" scheme="https://blog.felicx.eu.org/tags/%E7%A7%91%E5%B9%BB/"/>
    
  </entry>
  
  <entry>
    <title>CANoe 常用操作指南</title>
    <link href="https://blog.felicx.eu.org/108916185.html"/>
    <id>https://blog.felicx.eu.org/108916185.html</id>
    <published>2025-04-06T09:24:17.000Z</published>
    <updated>2025-04-13T09:46:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CANoe 是德国 Vector 公司为汽车总线的开发而设计的一款总线开发环境，全称叫 CAN open environment。CANoe 集合了网络监控、数据获取&#x2F;记录、节点仿真、诊断、自动测试等功能。</p><hr><h2 id="一、新建工程与基础配置"><a href="#一、新建工程与基础配置" class="headerlink" title="一、新建工程与基础配置"></a>一、新建工程与基础配置</h2><h3 id="1-1-新建工程"><a href="#1-1-新建工程" class="headerlink" title="1.1 新建工程"></a>1.1 新建工程</h3><ol><li>启动 CANoe 软件，执行 <strong>File → New → Available Templates</strong></li><li>根据需求选择模板类型：<ul><li><strong>CAN 500k 1ch</strong>：单通道虚拟 CAN，默认波特率 500kbps</li><li><strong>CAN 500k 2ch</strong>：双通道虚拟 CAN，支持后续硬件扩展</li></ul></li><li>保存工程为 <code>.cfg</code> 格式文件<br><img src="/assets/post/20250413_DSbNv6tS.webp" alt="新建工程模板"></li></ol><hr><h3 id="1-2-通道配置与硬件映射"><a href="#1-2-通道配置与硬件映射" class="headerlink" title="1.2 通道配置与硬件映射"></a>1.2 通道配置与硬件映射</h3><ol><li><p><strong>设置通道数目</strong>：进入 <strong>Hardware -&gt; Channel Usage</strong>，配置网络通道数目，需确保不超过 CANoe 硬件最大通道数。<br>  <img src="/assets/post/20250413_q1D9Bg3h.webp" alt="通道数目"></p></li><li><p><strong>设置波特率</strong>：在 <strong>Hardware -&gt; Network Hardware -&gt; Setup</strong> 中设置 CAN 波特率。<br>  <img src="/assets/post/20250413_rIOmuKcW.webp" alt="波特率"></p></li><li><p><strong>设置滤波</strong>：在 <strong>Acceptance Filter</strong> 中配置标准帧&#x2F;扩展帧的滤波规则（ID 掩码、范围）。<br>  <img src="/assets/post/20250413_DOfr9L1J.webp" alt="滤波"></p></li><li><p><strong>硬件通道映射</strong>：进入 <strong>Application -&gt; Channel Mapping</strong>，将软件通道与物理硬件通道绑定（如将 CAN 1 映射到硬件 Channel 1）。<br>  <img src="/assets/post/20250413_oEJF4yKn.webp" alt="通道映射"></p></li></ol><hr><h3 id="1-3-DBC-文件导入"><a href="#1-3-DBC-文件导入" class="headerlink" title="1.3 DBC 文件导入"></a>1.3 DBC 文件导入</h3><p>两种导入方式：</p><ol><li><p><strong>直接添加</strong>：进入 <strong>NetWorks -&gt; Database</strong>，右键选择 <strong>Add</strong>，导入 DBC 文件。<br><img src="/assets/post/20250413_N6jp9tKY.webp" alt="导入DBC_1"></p></li><li><p><strong>向导导入</strong>：使用 <strong>Import Wizard</strong> 自动解析 DBC 文件中的网络节点，并添加到仿真节点中。<br><img src="/assets/post/20250413_j5VfhLLk.webp" alt="导入DBC_2"><br><img src="/assets/post/20250413_RFNRhqEX.webp" alt="导入DBC_3"></p></li></ol><hr><h2 id="二、常用操作与功能"><a href="#二、常用操作与功能" class="headerlink" title="二、常用操作与功能"></a>二、常用操作与功能</h2><h3 id="2-1-使用-Trace-工具监控报文"><a href="#2-1-使用-Trace-工具监控报文" class="headerlink" title="2.1 使用 Trace 工具监控报文"></a>2.1 使用 Trace 工具监控报文</h3><ol><li>点击 <strong>Analysis -&gt; Trace</strong> 打开 Trace 界面。</li><li>运行工程（点击闪电图标），选择正确的 CAN 通道（参考 <strong>Simulation Setup -&gt; Channels</strong>）。</li><li><strong>过滤功能</strong>：<ul><li>点击 ID 列的过滤图标，按信号 ID 过滤报文；</li><li>点击标志 3 处的图标切换报文显示模式（逐条显示或仅显示最后一次的此 ID 报文）；</li><li>标志 1 处的图标清空当前 Trace 界面的报文显示；</li><li>标志 2 处的图标停止&#x2F;更新 Trace 界面的报文显示。<br><img src="/assets/post/20250413_L3CXtvGu.webp" alt="Trace界面"></li></ul></li></ol><hr><h3 id="2-2-使用-Logging-保存日志"><a href="#2-2-使用-Logging-保存日志" class="headerlink" title="2.2 使用 Logging 保存日志"></a>2.2 使用 Logging 保存日志</h3><ol><li>进入 <strong>Analysis -&gt; Measurement Setup</strong>，右键 <strong>Logging</strong>，选择 <strong>Logging File Configuration</strong> 设置保存路径。<br><img src="/assets/post/20250413_XZWaKfUp.webp" alt="Logging配置"></li><li>双击暂停箭头图标启用日志记录，运行工程后所有报文交互将被保存（<code>.blf</code> 格式）。<br><img src="/assets/post/20250413_CbexzhBG.webp" alt="Logging开启"></li></ol><hr><h3 id="2-3-创建-IG-发送报文"><a href="#2-3-创建-IG-发送报文" class="headerlink" title="2.3 创建 IG 发送报文"></a>2.3 创建 IG 发送报文</h3><ol><li><p><strong>添加 IG 模块</strong>：在 <strong>Simulation Setup</strong> 界面，右键 <strong>Interactive Generators -&gt; Insert Interactive Generators Block CAN</strong>。<br><img src="/assets/post/20250413_YLB2Dih2.webp" alt="IG发送报文"></p></li><li><p><strong>自定义报文</strong>：双击 IG 模块，右键空白处选择 <strong>Add CAN Frame</strong>，填写 ID 和数据内容，支持单次或周期发送。<br><img src="/assets/post/20250413_s7nQFm1Y.webp" alt="IG发送报文"></p></li><li><p><strong>从 DBC 导入报文</strong>：需先导入 DBC 文件（参考 [1.3 DBC 文件导入]），右键选择 <strong>Add Frame From Database</strong> 添加预定义报文。<br><img src="/assets/post/20250413_516232Qg.webp" alt="IG发送报文"></p></li><li><p><strong>报文发送</strong>：完成 DBC 报文导入后，在 IG 界面对导入的报文进行发送操作。<br><img src="/assets/post/20250413_HvDOJTJG.webp" alt="IG发送报文"></p></li></ol><hr><h3 id="2-4-使用-Graphics-分析信号波形"><a href="#2-4-使用-Graphics-分析信号波形" class="headerlink" title="2.4 使用 Graphics 分析信号波形"></a>2.4 使用 Graphics 分析信号波形</h3><ol><li>打开 <strong>Analysis -&gt; Graphics</strong>，右键选择 <strong>Add Signals</strong>。</li><li><strong>手动定义信号</strong>：在 <strong>Graphics</strong> 界面下右键，选择 <strong>User Defined Signals</strong>，填写报文 ID、信号起始位及长度。<br>  <img src="/assets/post/20250413_s6JjwipM.webp" alt="信号波形"></li><li><strong>从 DBC 导入信号</strong>：在 <strong>Signals</strong> 或 <strong>Frames</strong> 中选择要查看的信号。<br>  <img src="/assets/post/20250413_rvWmSMV0.webp" alt="信号波形"></li><li><strong>多信号显示模式</strong><ul><li><strong>独立显示</strong>：点击图标选择 <strong>Show Signals in Separate Diagrams</strong>。<br><img src="/assets/post/20250413_zPsJpG43.webp" alt="信号波形"></li><li><strong>合并显示</strong>：选择 <strong>Show All Y-Axis</strong>。<br><img src="/assets/post/20250413_oqJKR6Ib.webp" alt="信号波形"></li></ul></li></ol><hr><h3 id="2-5-加载-CDD-诊断文件"><a href="#2-5-加载-CDD-诊断文件" class="headerlink" title="2.5 加载 CDD 诊断文件"></a>2.5 加载 CDD 诊断文件</h3><ol><li>点击 <strong>Diagnostics -&gt; Diagnostic ISO TP</strong>。<br><img src="/assets/post/20250413_7GfTgVh7.webp" alt="CDD加载"></li><li>右击 <strong>CAN</strong>，选择 <strong>Add Diagnostic Description</strong>，导入 CDD 文件。<br><img src="/assets/post/20250413_dX8qukBa.webp" alt="CDD加载"></li><li>通过 <strong>Diagnostic Console</strong> 发送预定义诊断报文。<br><img src="/assets/post/20250413_dnwFORuI.webp" alt="CDD加载"></li></ol><hr><h3 id="2-6-过滤报文接收"><a href="#2-6-过滤报文接收" class="headerlink" title="2.6 过滤报文接收"></a>2.6 过滤报文接收</h3><ol><li><p><strong>硬件级过滤</strong>：进入 <strong>Hardware -&gt; Network Hardware</strong>，配置接收 ID 范围。<br>  <img src="/assets/post/20250413_iv97ukWx.webp" alt="报文过滤"></p></li><li><p><strong>软件级过滤</strong></p><ul><li>在 <strong>Measurement Setup</strong> 中右击图标，选择 <strong>Insert Event Filter</strong>（显示为 CFB 图标）。<br><img src="/assets/post/20250413_BZWMPx5S.webp" alt="报文过滤"></li><li>双击 CFB 图标配置过滤规则。<br><img src="/assets/post/20250413_IUs1NViq.webp" alt="报文过滤"></li></ul></li><li><p><strong>功能模块扩展</strong>：在 <strong>Measurement Setup</strong> 界面右击图标，选择其他功能模块（如 CAPL 程序）。<br>  <img src="/assets/post/20250413_SRez732x.webp" alt="报文过滤"></p></li></ol><hr><h2 id="三、高级功能与统计"><a href="#三、高级功能与统计" class="headerlink" title="三、高级功能与统计"></a>三、高级功能与统计</h2><ol><li><p><strong>总线统计</strong><br>通过 <strong>Analysis -&gt; Statistics</strong> 查看总线负载、报文频率等。<br><img src="/assets/post/20250413_gWlTo4pQ.webp" alt="统计功能"></p></li><li><p><strong>变量监控</strong><br>在 <strong>Analysis -&gt; Data</strong> 中实时监控信号值并保存为 MDF 文件。<br><img src="/assets/post/20250413_dsDtq54H.webp" alt="统计功能"></p></li></ol><hr><h2 id="四、注意事项"><a href="#四、注意事项" class="headerlink" title="四、注意事项"></a>四、注意事项</h2><ol><li>修改硬件配置（如通道映射、波特率）需在工程停止状态下操作。</li><li>导入 DBC&#x2F;CDD 文件时，需确保文件与当前网络协议匹配。</li><li>使用 IG 发送报文时，若未收到响应，需检查通道映射和硬件连接。</li></ol>]]></content>
    
    
    <summary type="html">记录了 CANoe 工程配置还有一些常用操作，方便学习</summary>
    
    
    
    <category term="自动驾驶" scheme="https://blog.felicx.eu.org/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
    <category term="can" scheme="https://blog.felicx.eu.org/tags/can/"/>
    
    <category term="canoe" scheme="https://blog.felicx.eu.org/tags/canoe/"/>
    
  </entry>
  
  <entry>
    <title>北京一日游</title>
    <link href="https://blog.felicx.eu.org/440314130.html"/>
    <id>https://blog.felicx.eu.org/440314130.html</id>
    <published>2025-03-23T02:22:00.000Z</published>
    <updated>2025-03-23T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近出差天津，想着难得来一趟，不去北京就亏了。但时间比较极限，晚上9.的飞机，所以只有不到一天的时间逛北京又是特种兵暴走的一天。</p><h2 id="凌晨六点的天津"><a href="#凌晨六点的天津" class="headerlink" title="凌晨六点的天津"></a>凌晨六点的天津</h2><p>被闹钟惊醒时，窗外还飘着零星小雨。昨晚下过雪，地面还是湿的，天气微冷。天津的滴滴给我一种感觉是会提前到，在指定地点等你，跟广州的不太一样。</p><p>到了高铁站，天津南站小得出乎意料，只有一道匝机，就是进高铁的那道，进站不需要过匝机。七点的高铁上，窗外的金光铺满脸颊，一时间疲惫全消。<br><img src="/assets/post/20250323_NRmqLPuW.webp" alt="img"></p><h2 id="京城初印象"><a href="#京城初印象" class="headerlink" title="京城初印象"></a>京城初印象</h2><p>到了北京南站后，第一件事是寄存行李，我不想拖着行李箱到处逛。虽说之前在小红书看了怎么前往高铁站寄存点的路线，实际到了还是迷迷糊糊的。</p><p>北京南站是真大呀，跟广州南有的一拼了。索性不自己找路线了，直接去问检票的小姐姐。小姐姐还特地问我等会回来是坐地铁还是打车，坐地铁就直接寄存在东停车场处。抬头找东停车场的指示标志，一直往前走穿过行李案件的通道，就来到地下停车场，然后左拐走到尽头就能看到行李寄存点了。</p><p>就是有点小贵，收费员还拿着卷尺量尺寸，我的刚刚超一点，25块一天，高铁站物价果然名不虚传（摊手.jpg）。</p><h2 id="胡同里的早餐"><a href="#胡同里的早餐" class="headerlink" title="胡同里的早餐"></a>胡同里的早餐</h2><p>小红书看到的，很多人推荐“增盛魁小吃”。直接就坐地铁前往了。顺便一提，羊城通可以坐北京地铁。</p><p>到了小吃店，人确实多。店面小，里面已经坐满了，我只好排队外带。现炸的糖油饼确实酥脆，就是甜得有点齁嗓子。牛肉饼分量实在，边走边吃时，油脂渗过纸袋沾了满手。</p><p>因为店面没法坐，我就边拎着吃边往天安门广场走，沿着王府井西街慢慢走。穿过一片青砖灰瓦的胡同，晾衣绳上冻硬的秋裤和墙根堆着的蜂窝煤。老妈看了我的照片直接吐槽，为啥北京的房子比老家的还要旧。<br><img src="/assets/post/20250323_6sB8H5bc.webp" alt="img"></p><h2 id="天安门的仪式感"><a href="#天安门的仪式感" class="headerlink" title="天安门的仪式感"></a>天安门的仪式感</h2><p>慢悠悠走了半小时，总算来到金水桥前往故宫方向（我是直接导航天安门西地铁B出口），差不多就跟着人群走就行了。从看见城墙开始就有安检口，一路检查了三遍，人是真的多，排队差不多花了半个小时。还好我这是淡季，不敢想象旺季得排到啥时候。</p><p>天安门对面就是长安街，远远的可以看到人民纪念碑。刚出安检口，就能看到天安门和伟人的画像。不得不说，北京的天真蓝啊。<br><img src="/assets/post/20250323_aH5EAR27.webp" alt="img"></p><h2 id="紫禁城十二时辰"><a href="#紫禁城十二时辰" class="headerlink" title="紫禁城十二时辰"></a>紫禁城十二时辰</h2><p>跟着人群走，走过外金水桥，穿过城门，就能远远看到端门了。挺好奇的，过城门时，那些大爷大妈都在摸城门的鎏金门钉，是有啥讲究吗。我不懂，但还是跟着摸了摸。<br><img src="/assets/post/20250323_YlxzuNhj.webp" alt="img"></p><p>穿过端门，就是很大的空地，前面是午门检票口，左边是天安门城楼的检票口，因为没预约城楼，所以上不去。还没进故宫，给我的感觉就是大，在这里踢足球得累的够喘。</p><p>安检口的人更多，排了不止半小时总算进来了。有一半都是叔叔阿姨辈的，果然老一辈对故宫就是有一种说不清的向往。<br><img src="/assets/post/20250323_YdCVvo5X.webp" alt="img"></p><p>穿过午门，映入眼帘的就是内金水桥。心中的崇敬悠然而生（有一半可能是风吹的发抖），原来古代百官每天都是走这条路去上朝的。</p><p>太和殿前乌泱泱全是旅行团，导游的小旗子在空中乱舞。挤到前排才看清金銮殿的真容——比电视剧里小很多，龙椅上的金漆有些斑驳，突然觉得皇帝上班也挺憋屈。<br><img src="/assets/post/20250323_MB4Uvlax.webp" alt="img"></p><p>来到慈宁宫，说好的甄嬛养老院，结果全是佛像雕塑，跟进了庙会似的。边上就是网红打卡墙。后来回想，确实只有那一片墙是最鲜红的，不知道是不是经常刷漆焕新。</p><p>西六宫的巷道特别窄，旅游团挤得水泄不通。东六宫的延禧宫，西洋烂尾楼让人眼前一亮，钢筋骨架像未完工的现代艺术装置。</p><p>走到御花园时腿已不是自己的。这里好多连理枝，有幸抓拍了个小朋友。<br><img src="/assets/post/20250323_PEaCF9n.webp" alt="img"></p><p>从神武门出来时，护城河水波零零。看夕阳给故宫屋顶镀金，突然明白为什么说”一座紫禁城，半部中国史”。<br><img src="/assets/post/20250323_lrDwDSEa.webp" alt="img"></p><h2 id="归去来兮"><a href="#归去来兮" class="headerlink" title="归去来兮"></a>归去来兮</h2><p>逛完了故宫，本来想着去天坛走走。下了地铁才记起天坛要购票，而且手机只剩10%电量，遂作废直奔高铁站。在南站又兜了一会才找到行李寄存处，候车时肚子开始咕咕叫，想起早上的牛肉包子还没吃完。已经顾不上什么形象了，填饱肚子最重要。</p><p>高铁直接到天津站，然后地铁直达津海国际机场。顺便提一嘴，津海机场最好是上二楼机场进口打车，取行李的是一楼，车进不来，都是拉客的在那里忽悠。广州的白云机场也是，取了行李上二楼机场进口更容易打到车。</p><p>飞机冲入云层时，舷窗外星河低垂。闭眼尽是宫墙日影、糖油饼香、脊兽凝望，忽然懂得梁思成说的：”这些建筑绝不是某一时某一人的产物，而是整个中华民族的集体记忆。”二十四小时的特种兵行程，竟与六百年时光打了个照面。</p>]]></content>
    
    
    <summary type="html">天津-北京特种兵一日游</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="旅游" scheme="https://blog.felicx.eu.org/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>使用 GitHub Actions 实现多项目自动化工作流</title>
    <link href="https://blog.felicx.eu.org/339201242.html"/>
    <id>https://blog.felicx.eu.org/339201242.html</id>
    <published>2025-03-02T07:06:53.000Z</published>
    <updated>2025-03-02T07:30:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在开源项目协作中，自动化工作流（CI&#x2F;CD）是提升效率的关键。GitHub Actions 作为 GitHub 官方提供的自动化工具，可以轻松实现定时任务、事件触发、多环境部署等功能。但在实际应用中，<strong>多项目混合仓库</strong>（monorepo）的自动化常会遇到路径配置、权限管理等问题。本文将以一个 ETF 指数追踪项目为例，详细讲解如何正确配置 GitHub Actions 实现以下功能：</p><p>✅ <strong>定时爬取数据</strong><br>✅ <strong>自动生成可视化图表</strong><br>✅ <strong>跨子目录文件操作</strong><br>✅ <strong>错误通知与提交回传</strong></p><h2 id="项目结构分析"><a href="#项目结构分析" class="headerlink" title="项目结构分析"></a>项目结构分析</h2><p>假设仓库目录结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">your-repo/</span><br><span class="line">├── .github/</span><br><span class="line">│   └── workflows/</span><br><span class="line">│       └── etf-index-tracker.yml  <span class="comment"># Action 配置文件</span></span><br><span class="line">└── etf-index-tracker/  <span class="comment"># 子项目目录</span></span><br><span class="line">    ├── main.py         <span class="comment"># 数据处理脚本</span></span><br><span class="line">    ├── requirements.txt</span><br><span class="line">    ├── data/           <span class="comment"># 存储 CSV 数据</span></span><br><span class="line">    └── html/           <span class="comment"># 生成的图表文件</span></span><br></pre></td></tr></table></figure><p><strong>核心需求</strong>：<br>当 <code>etf-index-tracker</code> 子目录代码更新时，或每日定时任务触发时：</p><ol><li>运行 Python 脚本生成数据文件（<code>data/*.csv</code>）</li><li>生成可视化 HTML 报告（<code>html/*.html</code>）</li><li>自动将结果提交回仓库</li></ol><h2 id="GitHub-Action-配置详解"><a href="#GitHub-Action-配置详解" class="headerlink" title="GitHub Action 配置详解"></a>GitHub Action 配置详解</h2><h3 id="完整工作流文件"><a href="#完整工作流文件" class="headerlink" title="完整工作流文件"></a>完整工作流文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ETF</span> <span class="string">Index</span> <span class="string">Tracker</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;etf-index-tracker/**&#x27;</span>  <span class="comment"># 仅监控子目录变更</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;!html/**&#x27;</span>              <span class="comment"># 忽略生成文件的触发</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 10 * * *&#x27;</span>  <span class="comment"># UTC 10:00（北京时间 18:00）</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span>       <span class="comment"># 手动触发选项</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">run-script:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">contents:</span> <span class="string">write</span>  <span class="comment"># 关键：允许写入仓库</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span>  <span class="comment"># 获取完整提交历史</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Python</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-python@v5</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">python-version:</span> <span class="string">&#x27;3.12&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requirements.txt</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./etf-index-tracker</span>  <span class="comment"># 指定子目录</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Reports</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">python</span> <span class="string">main.py</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./etf-index-tracker</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Commit</span> <span class="string">Results</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd ./etf-index-tracker  # 进入子项目目录</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">          <span class="comment"># 配置 Git 身份</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;github-actions&quot;</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;41898282+github-actions[bot]@users.noreply.github.com&quot;</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># 提交变更</span></span><br><span class="line">          <span class="string">git</span> <span class="string">add</span> <span class="string">data/</span> <span class="string">html/</span></span><br><span class="line">          <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;Auto-update: $(date &#x27;+%Y-%m-%d %H:%M&#x27;) [skip ci]&quot;</span> <span class="string">||</span> <span class="string">echo</span> <span class="string">&quot;No changes&quot;</span></span><br><span class="line">          <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">HEAD:main</span></span><br></pre></td></tr></table></figure><h2 id="关键技术点解析"><a href="#关键技术点解析" class="headerlink" title="关键技术点解析"></a>关键技术点解析</h2><h3 id="路径隔离与工作目录"><a href="#路径隔离与工作目录" class="headerlink" title="路径隔离与工作目录"></a>路径隔离与工作目录</h3><ul><li><p><strong><code>working-directory</code></strong> 参数：<br>指定命令执行的子目录，避免路径混乱。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">-r</span> <span class="string">requirements.txt</span></span><br><span class="line">  <span class="attr">working-directory:</span> <span class="string">./etf-index-tracker</span>  <span class="comment"># 作用范围仅限此步骤</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Python 脚本中的路径处理</strong>：<br>使用 <code>os.path.dirname(__file__)</code> 获取脚本所在目录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 main.py 中定义路径</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">BASE_DIR = os.path.dirname(__file__)</span><br><span class="line">HTML_DIR = os.path.join(BASE_DIR, <span class="string">&quot;html&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="防循环触发机制"><a href="#防循环触发机制" class="headerlink" title="防循环触发机制"></a>防循环触发机制</h3><ul><li><p><strong>忽略生成文件的推送</strong>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;etf-index-tracker/**&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;!html/**&#x27;</span>  <span class="comment"># 排除 html 目录的变更</span></span><br></pre></td></tr></table></figure></li><li><p><strong><code>[skip ci]</code> 提交标记</strong>：<br>避免自动提交触发新的工作流。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;Update [skip ci]&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><ul><li><p><strong>工作流级别权限</strong>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">run-script:</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">contents:</span> <span class="string">write</span>  <span class="comment"># 允许写入仓库</span></span><br></pre></td></tr></table></figure></li><li><p><strong>仓库设置</strong>：<br>在仓库的 <code>Settings &gt; Actions &gt; General</code> 中：<br>✅ 勾选 “Read and write permissions”<br>✅ 允许 “Workflow permissions”</p></li></ul><h3 id="Git-设置"><a href="#Git-设置" class="headerlink" title="Git 设置"></a>Git 设置</h3><ul><li><p><strong>Commit and Push 配置不需要修改</strong>：<br>✅ 用户名：github-actions 是 GitHub 官方推荐的机器用户名称<br>✅ 邮箱：41898282+github-actions[bot]… 是 GitHub 自动生成的 no-reply 邮箱（格式固定）<br>✅ 作用：这些配置会使得提交记录显示为 github-actions &lt;41898282+github-actions[bot]@users.noreply.github.com&gt;</p></li><li><p><strong>什么情况下需要修改</strong></p><table><thead><tr><th>场景</th><th>建议配置</th><th>示例</th></tr></thead><tbody><tr><td>希望提交显示为你的账户</td><td>使用你的 GitHub 账户邮箱（需配置为 Secret）</td><td><code>git config --global user.email &quot;$&#123;&#123; secrets.USER_EMAIL &#125;&#125;&quot;</code></td></tr><tr><td>组织项目需要规范提交者</td><td>使用组织专属邮箱</td><td><a href="mailto:&#116;&#101;&#x61;&#x6d;&#x40;&#x6f;&#x72;&#x67;&#x2e;&#x63;&#111;&#109;">&#116;&#101;&#x61;&#x6d;&#x40;&#x6f;&#x72;&#x67;&#x2e;&#x63;&#111;&#109;</a></td></tr><tr><td>需要绕过邮件通知</td><td>保持默认（no-reply 邮箱不会触发通知）</td><td>无需修改</td></tr></tbody></table></li><li><p><strong>推荐保持默认的原因</strong></p><ul><li>权限安全：当前配置使用 GITHUB_TOKEN 已具备提交权限，无需暴露个人邮箱</li><li>防止循环触发：[skip ci] 标记 + 默认邮箱能有效避免工作流重复触发</li><li>官方认证标识：github-actions[bot] 邮箱会在提交记录中显示 GitHub 官方机器人图标</li></ul></li></ul><h2 id="常见问题与解决方案"><a href="#常见问题与解决方案" class="headerlink" title="常见问题与解决方案"></a>常见问题与解决方案</h2><h3 id="错误：fatal-pathspec-html-did-not-match-any-files"><a href="#错误：fatal-pathspec-html-did-not-match-any-files" class="headerlink" title="错误：fatal: pathspec &#39;html/*&#39; did not match any files"></a>错误：<code>fatal: pathspec &#39;html/*&#39; did not match any files</code></h3><ul><li><strong>原因</strong>：文件生成路径错误，或目录为空</li><li><strong>修复</strong>：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Commit</span> <span class="string">Results</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    # 强制创建目录（防首次运行失败）</span></span><br><span class="line"><span class="string">    mkdir -p ./etf-index-tracker/html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="comment"># 改用目录路径而非通配符</span></span><br><span class="line">    <span class="string">git</span> <span class="string">add</span> <span class="string">html/</span> <span class="string">data/</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="错误：Permission-denied-to-GitHub-Actions"><a href="#错误：Permission-denied-to-GitHub-Actions" class="headerlink" title="错误：Permission denied to GitHub Actions"></a>错误：<code>Permission denied to GitHub Actions</code></h3><ul><li><strong>原因</strong>：缺少 <code>GITHUB_TOKEN</code> 或权限不足</li><li><strong>修复</strong>：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Commit</span> <span class="string">Results</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span>  <span class="comment"># 必须注入 token</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="调试技巧"><a href="#调试技巧" class="headerlink" title="调试技巧"></a>调试技巧</h3><ul><li><strong>查看生成文件</strong>：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Debug</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">ls</span> <span class="string">-l</span> <span class="string">./etf-index-tracker/html/</span></span><br></pre></td></tr></table></figure></li><li><strong>本地模拟运行</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">act -j run-script -s GITHUB_TOKEN=your_token</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="扩展应用：多项目管理"><a href="#扩展应用：多项目管理" class="headerlink" title="扩展应用：多项目管理"></a>扩展应用：多项目管理</h2><p>若仓库包含多个独立项目（如 <code>project-a/</code>, <code>project-b/</code>），可通过以下方式扩展：</p><h3 id="独立工作流文件"><a href="#独立工作流文件" class="headerlink" title="独立工作流文件"></a>独立工作流文件</h3><p>为每个项目创建单独的 <code>.yml</code> 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.github/workflows/</span><br><span class="line">├── project-a.yml</span><br><span class="line">└── project-b.yml</span><br></pre></td></tr></table></figure><h3 id="矩阵策略（Matrix）"><a href="#矩阵策略（Matrix）" class="headerlink" title="矩阵策略（Matrix）"></a>矩阵策略（Matrix）</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">run-projects:</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">project:</span> [<span class="string">etf-tracker</span>, <span class="string">stock-analyser</span>]</span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Run</span> <span class="string">Script</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">python</span> <span class="string">main.py</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./$&#123;&#123;</span> <span class="string">matrix.project</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过合理配置 GitHub Actions，您可以实现：<br>🕒 <strong>定时任务</strong>：每日自动数据更新<br>🔀 <strong>事件触发</strong>：代码推送立即执行<br>📁 <strong>路径隔离</strong>：多项目互不干扰<br>🔒 <strong>安全提交</strong>：自动回传结果至仓库</p><p>本文的完整代码示例可在 <a href="https://github.com/FelicxFoster/automagically">GitHub 仓库</a> 获取。如果你在配置过程中遇到其他问题，欢迎在评论区讨论！</p><hr><p><strong>延伸阅读</strong>：</p><ul><li><a href="https://docs.github.com/actions">GitHub Actions 官方文档</a></li><li><a href="https://docs.bokeh.org/en/latest/docs/user_guide/quickstart.html">Bokeh 可视化教程</a></li><li><a href="https://monorepo.tools/">Monorepo 最佳实践</a></li></ul>]]></content>
    
    
    <summary type="html">Github Actions 自动化指南</summary>
    
    
    
    <category term="开发运维" scheme="https://blog.felicx.eu.org/categories/%E5%BC%80%E5%8F%91%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="git" scheme="https://blog.felicx.eu.org/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>解决 Git 连接 GitHub 超时问题</title>
    <link href="https://blog.felicx.eu.org/1049638684.html"/>
    <id>https://blog.felicx.eu.org/1049638684.html</id>
    <published>2025-02-09T08:11:04.000Z</published>
    <updated>2025-02-09T08:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在使用 Git 进行代码拉取或推送时，可能会遇到 <code>Failed to connect to github.com port 443: Timed out</code> 的错误提示。这个问题通常与网络连接或代理设置有关。本文将详细介绍几种常见的解决方法，帮助你快速解决这一问题。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 Windows 10 系统中，使用 Git 拉取代码时，突然出现以下错误提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to connect to github.com port 443: Timed out</span><br></pre></td></tr></table></figure><p>尽管通过 <code>ping</code> 命令检测 <code>github.com</code> 可以正常连接，且 GitHub 网站也能正常访问，但 Git 操作仍然失败。经过查阅资料，发现该问题可能与代理设置有关。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方法一：通过-Git-Config-设置代理"><a href="#方法一：通过-Git-Config-设置代理" class="headerlink" title="方法一：通过 Git Config 设置代理"></a>方法一：通过 Git Config 设置代理</h3><ol><li><p><strong>进入网络设置</strong><br>打开 Windows 的设置 -&gt; 网络和 Internet -&gt; 代理，找到 <code>使用设置脚本</code> 选项，将其打开，并复制脚本地址到浏览器中下载。</p></li><li><p><strong>查看代理文件</strong><br>下载的 PAC 代理文件中，开头通常会有一个 <code>proxy</code> 字段，记录下该字段的值。</p></li><li><p><strong>设置 Git 代理</strong><br>使用以下命令为 Git 设置代理：</p><ul><li>全局设置代理：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy xxxxx</span><br></pre></td></tr></table></figure></li><li>为某个特定项目设置代理：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> http.proxy xxxxx</span><br></pre></td></tr></table></figure>设置完成后，再次尝试拉取代码。</li></ul></li></ol><h3 id="方法二：修改-Hosts-文件（推荐）"><a href="#方法二：修改-Hosts-文件（推荐）" class="headerlink" title="方法二：修改 Hosts 文件（推荐）"></a>方法二：修改 Hosts 文件（推荐）</h3><ol><li><p><strong>查询 GitHub 的 IP 地址</strong><br>访问 <a href="https://www.ipaddress.com/">IPAddress.com</a>，输入 <code>github.com</code> 查询其对应的 IP 地址。</p></li><li><p><strong>修改 Hosts 文件</strong><br>打开 <code>C:\Windows\System32\drivers\etc\hosts</code> 文件，添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">140.82.112.4 github.com</span><br></pre></td></tr></table></figure></li><li><p><strong>刷新 DNS 缓存</strong><br>在命令提示符中执行以下命令，刷新 DNS 缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure></li></ol><h3 id="方法三：设置-Git-代理端口（推荐）"><a href="#方法三：设置-Git-代理端口（推荐）" class="headerlink" title="方法三：设置 Git 代理端口（推荐）"></a>方法三：设置 Git 代理端口（推荐）</h3><ol><li><p><strong>查看网络代理端口</strong><br>打开网络代理设置页面（Windows 的设置 -&gt; 网络和 Internet -&gt; 代理 -&gt; 手动设置代理），查看当前使用的代理端口号。</p></li><li><p><strong>设置 Git 代理端口</strong><br>使用以下命令设置 Git 的代理端口，确保与网络代理端口一致：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy 127.0.0.1:7890</span><br><span class="line">git config --global https.proxy 127.0.0.1:7890</span><br><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure></li></ol><h3 id="方法四：清除-Git-代理设置"><a href="#方法四：清除-Git-代理设置" class="headerlink" title="方法四：清除 Git 代理设置"></a>方法四：清除 Git 代理设置</h3><p>如果你关闭了代理工具（如梯子），但在拉取代码时仍然报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to connect to 127.0.0.1 port 7890 after 2034 ms: Couldn<span class="string">&#x27;t connect to server</span></span><br></pre></td></tr></table></figure><ol><li><p><strong>检查代理设置</strong><br>使用以下命令查看当前 Git 的代理设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy</span><br></pre></td></tr></table></figure></li><li><p><strong>清除代理设置</strong><br>如果存在代理设置，使用以下命令清除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br></pre></td></tr></table></figure></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>Failed to connect to github.com port 443: Timed out</code> 错误通常与网络代理设置有关。通过以上几种方法，你可以根据实际情况选择合适的解决方案。推荐优先尝试修改 Hosts 文件或设置 Git 代理端口，这两种方法在大多数情况下都能有效解决问题。</p>]]></content>
    
    
    <summary type="html">Failed to connect to github.com port 443 Timed out</summary>
    
    
    
    <category term="开发运维" scheme="https://blog.felicx.eu.org/categories/%E5%BC%80%E5%8F%91%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="git" scheme="https://blog.felicx.eu.org/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>2025年度OKR</title>
    <link href="https://blog.felicx.eu.org/1985364334.html"/>
    <id>https://blog.felicx.eu.org/1985364334.html</id>
    <published>2025-01-04T01:00:00.000Z</published>
    <updated>2025-01-04T01:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="73bfca46d159ba0922e94ee3aa53be503efdbd530feab8780ee9eb09fb5634f0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="年度总结" scheme="https://blog.felicx.eu.org/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>2024年度总结</title>
    <link href="https://blog.felicx.eu.org/3268380856.html"/>
    <id>https://blog.felicx.eu.org/3268380856.html</id>
    <published>2024-12-30T12:00:00.000Z</published>
    <updated>2025-01-11T08:37:58.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="12b2ac00ada45562183accab28de2823cd059a975f676c3c7f98e3b518a06859"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="年度总结" scheme="https://blog.felicx.eu.org/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>我的听歌之路</title>
    <link href="https://blog.felicx.eu.org/3315959774.html"/>
    <id>https://blog.felicx.eu.org/3315959774.html</id>
    <published>2024-12-14T08:32:42.000Z</published>
    <updated>2024-12-14T10:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天闲来无事，翻了下网易云创建的歌单，发现很多歌单现在都不怎么听了，但是在当时的年纪，却每天都在循环。</p><p>小学时听音乐的途径只有收音机，每天除了听鬼怪故事，就是听歌，喜欢听《包青天》、《我的中国心》、《酒干倘卖无》、《冬天里的一把火》，反反复复的听。反倒是对大街小巷传唱度很高的《老鼠爱大米》、《最炫民族风》这些流行歌曲嗤之以鼻。现在想起来，多半是受父亲熏陶，因为这些老歌属于他那个年代的流行歌曲，而他每天都在家里哼，久而久之便习惯上了老歌。</p><p>到了初中，开始接触到 MP3，也开始接触到了更多的流行歌曲。像《春天里》、《我的好兄弟》这类讲兄弟情的，当时很是喜欢。初中是叛逆期，就喜欢称兄道弟，倒也不出奇。也是在初中开始接触到了 Beyond，《海阔天空》是我听的第一首粤语歌，从那时候开始，就开始喜欢上这支乐队，无论是家驹的嗓音，还是他们的歌词，总能激起心中的澎湃，特别是后面听了《Amani》，全场大合唱的时候，很有感触。</p><p>到了高中，刚好碰上《爸爸去哪儿》开播，那时还特地把手机铃声换成了主题曲，当时用的是老人机，没法下载歌曲，还是用收音机录了好多次才当了铃声。这个阶段，开始慢慢意识到自己和别人的差距，也没有时间去说情情爱爱，所以对《客官不可以》、《多余的解释》这些都不感兴趣，尤其反感 TFBOYS 的歌。高中更多的是听朴树的《平凡之路》和南征北战的《我的天空》，给我难熬的学习生涯一抹阳光，让我还有动力继续往前走。值得一提的是，直到毕业，我都不喜欢凤凰传奇的歌，觉得太土了。</p><p>到了大学，开始喜欢民谣，还是那种伤感的民谣。那个时间段，网易的歌单里都是《成都》、《城南花已开》、《Let Her Go》、《Five Hundred Miles》这一类的；慢慢的开始听《觅香》、《Wait For You》这些，情窦初开了嘛；到了大三，接触到了机器人，每天都是泡在实验室，开始喜欢上了小众的歌曲，像《阿衣莫》、《上头歌》、《月光光》，说不上为什么喜欢，但听这些歌能让我平静，写代码这些能更有思路。当然，这个阶段我更像是是杂食系，听粤语，听日语，听英语，只要是喜欢的都收藏。期间买了把口琴，有事没事就在宿舍里吹，所以我的歌单里又多了很多流行歌曲的口琴版。大三时韩综《Super Band》开始播出，每周更新都没落下，十分惊艳乐手们的创作水准，专门列了个歌单来收藏他们的歌。当然，这个时候 Beyond 更是我的内心寄托，感觉和 Beyond 有种奇怪的缘分，高中时年级级歌就是《光辉岁月》改编的，到了大学，校歌《大学问》也是《光辉岁月》改编的。</p><p>毕业后，开始工作。恰好这时《乐队的夏天》开播。每天都是在公司下好新出的一集，回家慢慢看。当然不是所有摇滚都喜欢，像重塑的歌我就无感，我更喜欢新裤子、后海大鲨鱼这些，像羽果的《怒马》、丢火车的《火车日记》、康士坦的《美好的事可不可以发生在我身上》也比较喜欢。仔细想想，我应该是向往这种自由的气息，毕竟一周除了工作没剩多少个人时间。工作第二年，我开始跳槽，也是这个时候接触到了毛不易的歌，很慢很舒服，尤其喜欢《无名的人》，仿佛写的就是自己，比《平凡之路》还写实。对凤凰传奇的改观也是工作后，再也不觉得他们的歌土了，而且又开始喜欢起听小时候的华语乐坛金曲，实在不喜欢现在的流行歌曲，完全没有听下去的欲望，感觉华语乐坛倒退了好多。</p><p>写了这么多，听歌品味的变化，我觉得是我听音乐的动机和方式不同了。小时候只有收音机和父亲的哼唱，所以喜欢老歌；初高中接触到了流行歌曲和粤语歌，所以听歌风格开始变化；到了大学，要静下心写代码，所以听小众歌曲，要练口琴，所以听口琴版；毕业工作了，更加向往自由，所以听乐队，越发觉得孤独，所以听老歌。</p>]]></content>
    
    
    <summary type="html">年龄越来越大，听的歌也在慢慢变化</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="音乐" scheme="https://blog.felicx.eu.org/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Typecho 博客搭建</title>
    <link href="https://blog.felicx.eu.org/9399837.html"/>
    <id>https://blog.felicx.eu.org/9399837.html</id>
    <published>2024-10-20T04:28:34.000Z</published>
    <updated>2024-10-20T08:10:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>国庆前就搭好博客了，放假回来到现在，总算有时间整理下博客了。主要是前段时间看到个朋友圈主题的博客，挺适合我这种随手记的。</p><h2 id="数据库创建"><a href="#数据库创建" class="headerlink" title="数据库创建"></a>数据库创建</h2><p>之前写过一篇『<a href="https://blog.felicx.eu.org/1521393913.html">国内外一些免费的云数据库</a>』，挑来挑去选了 TiDB（<del>主要是使用 Supbase 死活无法连接 Typecho</del>）。</p><ol><li>创建数据库集群；<br><img src="/assets/post/20241020_BrQp44wY.webp" alt="img"></li><li>创建项目所需数据库；<br>CREATE DATABASE tidbcloud_WeChat_Moments_icefox; （可自定义为想起的数据库名称）<br><img src="/assets/post/20241020_VBC3Vv0w.webp" alt="img"></li><li>在 Overview 界面，点击右上角的 Connect 获得数据库连接参数；<br><img src="/assets/post/20241020_TCnyiBt4.webp" alt="img"></li><li>Endpoint Type 选择 Public，数据库选择为刚刚创建的数据库，保存好生成的参数；<br><img src="/assets/post/20241020_2sY3AU2R.webp" alt="img"></li><li><a href="https://letsencrypt.org/certs/isrgrootx1.pem">下载 CA 证书</a>，TiDB 的 Public 连接方式强制要求 TLS 连接，故还需配置其 CA 证书；</li></ol><h2 id="Typecho-程序"><a href="#Typecho-程序" class="headerlink" title="Typecho 程序"></a>Typecho 程序</h2><ol><li>打开<a href="https://github.com/typecho/typecho"> Github 链接</a>下载 Typecho 程序；</li><li>根目录新建 vercel.json，输入以下<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;functions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;api/index.php&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;runtime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vercel-php@0.6.0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;routes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/(.*)&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/api/index.php&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;regions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;hkg1&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>根目录新建 &#x2F;api&#x2F;index.php，输入以下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>= <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span>.<span class="variable">$_SERVER</span>[<span class="string">&quot;PHP_SELF&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../index.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#echo $_SERVER[&quot;PHP_SELF&quot;];</span></span><br></pre></td></tr></table></figure></li><li>将刚才下载的 CA 证书 isrgrootx1.pem 放在根目录；</li><li>选个主题，我挑的是 <a href="https://github.com/xiaopanglian/icefox">icefox</a>，放入 \usr\themes 目录下</li><li>将代码提交到 Github，等下要用 Vercel 引入；</li></ol><h2 id="Vercel-部署"><a href="#Vercel-部署" class="headerlink" title="Vercel 部署"></a>Vercel 部署</h2><p>Vercel 部署没什么好说的，注意要配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">TYPECHO_HOST=<span class="string">&quot;&quot;</span> <span class="comment"># 数据库地址</span></span><br><span class="line">TYPECHO_DATABASE=<span class="string">&quot;tidbcloud_WeChat_Moments_icefox&quot;</span> <span class="comment"># 数据库名称</span></span><br><span class="line">TYPECHO_USERNAME=<span class="string">&quot;&quot;</span> <span class="comment"># 数据库用户名</span></span><br><span class="line">TYPECHO_PASSWORD=<span class="string">&quot;&quot;</span> <span class="comment"># 数据库密码</span></span><br><span class="line">TYPECHO_PREFIX=<span class="string">&quot;typecho_&quot;</span> <span class="comment"># 前缀</span></span><br><span class="line">TYPECHO_ADAPTER_NAME=<span class="string">&quot;Pdo_Mysql&quot;</span> <span class="comment"># 数据库适配器</span></span><br><span class="line">TYPECHO_CHARSET=<span class="string">&quot;utf8mb4&quot;</span> <span class="comment"># 数据库编码</span></span><br><span class="line">TYPECHO_ENGINE=<span class="string">&quot;MyISAM&quot;</span> <span class="comment"># 数据库引擎</span></span><br><span class="line">TYPECHO_PORT=<span class="string">&quot;4000&quot;</span> <span class="comment"># 数据库端口</span></span><br><span class="line">TYPECHO_SSL_CA=<span class="string">&quot;isrgrootx1.pem&quot;</span> <span class="comment"># 数据库SSL证书位置</span></span><br></pre></td></tr></table></figure><p><img src="/assets/post/20241020_idZ9ZWGA.webp" alt="img"></p><h2 id="Typecho-安装"><a href="#Typecho-安装" class="headerlink" title="Typecho 安装"></a>Typecho 安装</h2><p>输入 Vercel 分配的网址+&#x2F;install.php，进入安装页面，跟着步骤走就行了。<br><img src="/assets/post/20241020_4x3p7Ntp.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">Typecho + Vercel + TiDB，把白嫖用到极致</summary>
    
    
    
    <category term="折腾系列" scheme="https://blog.felicx.eu.org/categories/%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="typecho" scheme="https://blog.felicx.eu.org/tags/typecho/"/>
    
  </entry>
  
  <entry>
    <title>技术岗位如何写简历（转）</title>
    <link href="https://blog.felicx.eu.org/1589846811.html"/>
    <id>https://blog.felicx.eu.org/1589846811.html</id>
    <published>2024-09-23T15:15:21.000Z</published>
    <updated>2024-09-23T15:30:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在搜东西，无意中来到一位大佬的<a href="https://www.paincker.com/">博客</a>，看到了这篇<a href="https://www.paincker.com/how-to-write-a-resume/">技术岗位如何写简历</a>，这里做个转载，方便日后反复学习。</p><h2 id="明确目标"><a href="#明确目标" class="headerlink" title="明确目标"></a>明确目标</h2><p><strong>求职是一个双向选择的过程</strong>。投简历面试的过程应该尽可能<strong>充分且实事求是</strong>的展示个人能力和特点，让 HR 和面试官在最短的时间里了解你，判断是否适合岗位需要。</p><ul><li><p>能力问题。简历应该尽力展示自己的能力，但是如果目前能力还不够，抱着侥幸心理刻意夸大个人实力、隐瞒欺骗方式通过面试的做法不可取。即使通过面试了，如果个人能力差太多，工作业绩很不好，一样会被淘汰。</p></li><li><p>时机与合适问题。如果对自己的认知不够清晰，不了解自己喜欢和擅长什么，强行拿到并不适合自己的岗位，和自己擅长或者感兴趣的事情差异太大，每天上班都很难受，也没意思。反过来看，面试失败并不一定是因为能力不够，可能是因为目前招人的意愿不强，或者只是因为个人能力和岗位需求不匹配。</p></li></ul><p>双向选择的过程通常都可以拿谈恋爱来类比。</p><ul><li>为了追到对自己并不感兴趣的异性，一直努力迎合对方，从一开始身份就是不公平的，即使追到了也容易会被嫌弃。学习PUA技术欺骗女生的做法也不可取。</li><li>强行改变自己甚至迷失自我的做法也是不好的。被一个女生拒绝并不一定是不够优秀，可能是因为对方目前没心思谈恋爱，或者是因为不合适。例如某个女生就喜欢家庭条件一般能吃苦的人，而你偏偏是个富二代 (●ﾟωﾟ●)</li></ul><h2 id="换位思考"><a href="#换位思考" class="headerlink" title="换位思考"></a>换位思考</h2><p>多进行换位思考，站在面试官的角度想问题。很多有工作经验的人包括我自己也做过面试官，对面试官的处境有所了解。在短短几个小时的时间里了解一个候选人其实很困难，有时候面试完了也拿不定主意，不确定候选人到底合适不合适。面试官挖掘候选人的能力很重要，候选人自我展示的能力也很重要。</p><p>应聘岗位的关注点：</p><ul><li>大公司、负责成熟产品的团队，分工更加明确，招聘实际干活的开发人员时，通常比较注重基础知识，关注技术深度，希望求职者在某些领域有较为深入的研究（当然不可能所有领域都很深入），一方面这种技能可以解决团队遇到的该领域的疑难问题，另一方面也体现了候选人的钻研能力。</li><li>高职级的岗位，或者是小团队，可能会关心员工有没有创业精神、产品意识、技术广度、领导能力等。</li><li>开发人员的通用能力都会比较被重视，例如智商、逻辑思维、学习能力、解决问题能力、团队精神、沟通能力等。</li></ul><h2 id="简历内容组成"><a href="#简历内容组成" class="headerlink" title="简历内容组成"></a>简历内容组成</h2><p>关于简历具体的形式（应该写多长，写哪些内容），不同的人有不同的看法，这里主要说一下我的看法。</p><p>根据文章 <a href="https://novoresume.com/career-blog/cv-vs-resume-what-is-the-difference">CV vs Resume - What are the Differences &amp; Definitions [+ Examples]</a> 的介绍，Resume 和 CV 是两个不同的概念，Resume 更加精简，通常只有一页，用于各行各业的求职；而 CV 更加详细，用于学术相关的招生和招聘。</p><p>有很多“江湖传言”说简历只能写一页，理由是 HR 每天要看很多简历，太长了没时间看，这里的简历指的正是 Resume。但是对于开发岗位，最好要用类似 CV 的东西，从技术专业角度对项目做一些更详细的介绍。</p><p>借鉴 Resume 和 CV 的概念，针对社招开发岗位，简历可以分为几部分：</p><p>一、简历 (Resume)，保持精简，最好是一页纸。简历用于<strong>HR筛选</strong>，以及让面试官快速了解你的<strong>基本情况</strong>。</p><ul><li>基本信息：姓名、年龄、联系方式（电话、邮箱、微信），必要时加上居住地、求职意向。</li><li>教育经历：时间、城市、学校、专业、学历，必要时加上英语成绩。</li><li>工作和项目经验：因为要精简，并且通常会有重复内容，这两者可以压缩到一起。<ul><li>每段工作经历，基本信息可包括时间、城市、公司、团队、职位。</li><li>可以采用<strong>总 - 分结构</strong>描述。每段工作先用一句话做简单总结（例如公司、团队、项目规模、个人成长等），然后分几点介绍工作内容和成果。每一点又可以先用一句话概括，再详细介绍。</li><li>关键项目的介绍，说清楚自己<strong>扮演的角色</strong>，是独立完成、项目负责人还是参与者，也可以注明大致的贡献占比。使用技术关键字（例如开发语言、工具），但不用写技术细节。成果要有说服力，多使用<strong>数据展示</strong>（例如开源项目 GitHub Star 2k+，性能提升 30% 等）。重点关键词可加粗，还可以插入相关网址链接（当然电子简历才好用链接，纸质简历就不太方便了）。</li><li>如果项目多，又有博客，可以写“更多项目详见个人博客”并插入链接。</li><li>做到让 HR 这样的非技术人员也能大致看到你的实力，并能根据技术关键字判断你的技能和岗位需求是否匹配。</li></ul></li><li>自我评价：可以列举自己的优点，一定要有<strong>实际案例支撑</strong>（可直接在括号中简要说明），否则就成了没有说服力的空话了。</li><li>个人技能：最擅长的东西应该在项目经验中已经介绍过了，这里列举你用过的所有编程语言、框架等技术关键字，主要作用是<strong>体现技术广度</strong>。使用“入门”、“了解”、“熟练”等描述，<strong>慎用精通</strong>，因为容易翻车。如果写了精通，面试官碰巧有了解这方面，可能会问一些比较难的问题，被问倒了就会让人怀疑你是否诚实了。也可以使用图形例如五角星来描述熟练度。</li></ul><p>二、履历 (CV) 或附录，是简历的补充，内容相对详细，长度可以有多页。</p><ul><li>内容可以包括重点项目经验的技术实现细节和关键点等。可以借鉴 STAR 原则说明，即 Situation（情景）、Task（任务）、Action（行动）和Result（结果），但也要根据实际进行调整，不能生搬硬套。</li><li>面试官如果对你简历中的某个项目感兴趣可以具体看 CV；同时在面试聊项目时也起到提纲的效果，如果担心一时想不起来，可以对照 CV 介绍。</li><li>形式上，建议附在简历末尾。也可以考虑写到个人博客中，在简历里贴链接。</li></ul><p>三、其他。</p><ul><li>个人博客：如果有还不错的个人博客，可以贴到简历里。个人博客如果写的好，<strong>远比简历的参考价值要大</strong>。</li><li>GitHub：如果 GitHub 比较活跃，有个人项目，可以贴到简历里。有一定技术含量、Star 较多的开源项目，通常是个<strong>很大的加分项</strong>。</li><li>Demo：对于客户端 App、网站之类的项目，必要时可以准备好项目、Demo、截图、网址等，面试官可以自行查看，或者现场给面试官演示，帮助进行说明。</li></ul><h2 id="项目经验的整理"><a href="#项目经验的整理" class="headerlink" title="项目经验的整理"></a>项目经验的整理</h2><p>有一定工作经验的人通常会有较多项目经验。为了保持简历的简洁，需要挑选最重点的内容来写。写项目经验时可以按照这样的方式进行：</p><ul><li>使用思维导图，将自己过去所有感觉还可以的项目都列出来，想到什么都写上。</li><li>对每个项目的成果如何展示、能反映什么样的能力特点做思考。例如复杂的业务，说明自己业务能力较好；技术项目，说明自己有一定的技术深度；某些小工具项目，说明自己注重工具的使用；个人开源项目，说明自己热爱技术等。</li><li>挑选几个最有代表性的、比较容易说明和展示的项目，做相对详细的分析，根据项目的重要性，介绍的篇幅也需要有控制。</li><li>最后将选定的项目和介绍压缩到简历上。</li><li>其他没有被选中但是也还不错的项目，可以通过博客或附录的形式展示。</li></ul><h2 id="内容与排版"><a href="#内容与排版" class="headerlink" title="内容与排版"></a>内容与排版</h2><ul><li>整体结构要清晰，避免逻辑混乱和内容冗余，和写文章类似。例如工作经验和项目经验，常会有很多重复内容，可以合并到一起。</li><li>文字表述要简单明了。如果觉得内容较少，不要刻意凑字数，简历字数和个人经验能力没有直接联系。</li><li>排版要整洁，版面要匀称。例如前面很拥挤，但是后面却有大块空白，就会很不匀称。字数较少可以适当加大字体、增加行间距、增加页面距等。字数太多，首先考虑压缩文字，实在没法压缩再从排版上考虑。</li><li>尽量避免错别字和标点符号问题。这会让人觉得你做事情不认真。</li></ul><h2 id="简历编辑工具"><a href="#简历编辑工具" class="headerlink" title="简历编辑工具"></a>简历编辑工具</h2><p>简历有多种编辑工具：</p><ul><li>Word。不太建议使用，想让简历稍微精致一点，Word 不太好实现。</li><li>Markdown。我使用的是这种方式，自己修改了 CSS 调整格式。</li><li>LaTeX。LaTeX 的排版效果很好，但是环境配置相对复杂，LaTeX 语法也需要一点时间掌握。我尝试用了大佬的 <a href="https://github.com/billryan/resume">LaTeX简历模板</a>，但是编译后的效果不对，可能是兼容性问题，一时不好解决，就放弃了。</li><li>PhotoShop 等设计工具，可以制作出画面更加精美的简历。比较耗时并且考验审美能力，对于技术开发岗位没太大必要，更适合设计师类岗位。</li><li>在线简历模板。例如 <a href="https://www.wondercv.com/">超级简历</a> 。</li></ul>]]></content>
    
    
    <summary type="html">转自一位博主的写简历大法</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="职场" scheme="https://blog.felicx.eu.org/tags/%E8%81%8C%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>国内外一些免费的云数据库</title>
    <link href="https://blog.felicx.eu.org/1521393913.html"/>
    <id>https://blog.felicx.eu.org/1521393913.html</id>
    <published>2024-09-22T06:01:25.000Z</published>
    <updated>2024-09-22T07:07:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在折腾用 Vercel 来部署 Typecho 网站，其中项目要用到数据库，这激发起了我寻找免费云数据库的兴趣。</p><h2 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h2><table><thead><tr><th>数据库</th><th>介绍</th></tr></thead><tbody><tr><td><a href="https://tidbcloud.com/">TiDB Cloud</a></td><td>国产之光，5GB 的 MySQL 免费存储和 每月 50M 请求单元，支持每天备份，要 SSL 连接，需下载 CA 证书</td></tr><tr><td><a href="https://azure.microsoft.com/zh-cn/products/mysql/">Azure</a></td><td>面向学生的 Azure 订阅里有免费的数据库服务，按下面教程操作即可；<br>另外也可以在免费 1G1C 的小鸡上自行搭建数据库服务</td></tr><tr><td><a href="https://www.netlify.com/integrations/aiven/?utm_campaign=minimal-starter">Aiven</a></td><td>5GB 存储空间，有 PostgreSQL、MySQL 等其他服务</td></tr><tr><td><a href="https://www.memfiredb.com/">Memfiredb</a></td><td>国产数据库，512MB 存储空间</td></tr><tr><td><a href="https://www.koyeb.com/">Koyeb</a></td><td>免费 4GB 的 PostgreSQL 数据库空间</td></tr><tr><td><a href="https://www.mongodb.com/zh-cn/cloud/atlas/register">MongoDB Atlas</a></td><td>MongoDB 数据库托管服务，免费账户可以永久使用 500MB 的数据库</td></tr><tr><td><a href="https://supabase.com/">Supabase</a></td><td>专用的 PostgreSQL 数据库</td></tr><tr><td><a href="https://render.com/">Render</a></td><td>10GB 数据库空间，有 PostgreSQL、Redis、MySQL 等，好像需要绑卡了</td></tr><tr><td><a href="https://www.freedb.tech/">FreeDB</a></td><td>国外免费的远程 MySQL 数据库，25MB 存储空间，缺点是连接较慢</td></tr><tr><td><a href="https://xata.io/">Xata</a></td><td>PostgreSQL 的无服务器数据平台</td></tr><tr><td><a href="https://www.sqlpub.com/">SQLPub</a></td><td>国内免费的 MySQL 数据库，获得最大 36000 次&#x2F;小时的请求、同时 30 个连接和 500M 存储空间，是测试服务</td></tr><tr><td><a href="https://www.db4free.net/">DB4free</a></td><td>MySQL 服务器测试服务</td></tr><tr><td><a href="https://www.freesqldatabase.com/">FreeSQLdatabase</a></td><td>5MB 存储空间</td></tr><tr><td><a href="serv00.com/">Serv00</a></td><td>支持 10 个 MySQL 8.0、3 个 PostgreSQL 14、3 个 MongoDB 5.0</td></tr><tr><td><a href="https://turso.tech/">Turso</a></td><td>用于生产的 SQLite，500 个数据库，总存储空间 9GB</td></tr><tr><td><a href="https://neon.tech/">Neon</a></td><td>512 MB的 Postgres 数据库空间</td></tr><tr><td><a href="https://www.leancloud.cn/">LeanCloud</a></td><td>云端数据存储服务</td></tr><tr><td><a href="https://www.cloudflare-cn.com/developer-platform/d1/">Cloudflare D1</a></td><td>Cloudflare 的原生无服务器数据库</td></tr><tr><td><a href="https://vercel.com/docs/storage">Vercel Storage</a></td><td>Vercel 本身也有免费数据库服务了，但有限制，每月只有 60hrs&#x2F;0.25cpu&#x3D;240h 的使用时间；<br>可能还会休眠，如果您的数据库在 5 分钟内未被访问，则数据库将被暂停。下次访问时，您将经历长达 1 秒的“冷启动”</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">白嫖使我快乐</summary>
    
    
    
    <category term="折腾系列" scheme="https://blog.felicx.eu.org/categories/%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="数据库" scheme="https://blog.felicx.eu.org/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>红十字救护员培训之旅</title>
    <link href="https://blog.felicx.eu.org/855438526.html"/>
    <id>https://blog.felicx.eu.org/855438526.html</id>
    <published>2024-09-02T14:32:25.000Z</published>
    <updated>2024-09-09T15:32:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近红十字会来公司做“初级急救员”培训，想着无事，参加下也无妨。另一方面还是想学习急救技能以备不时之需，刚好有机会索性参加下。<br>整个课程就8课时，既有理念知识，又有实操练习，收获蛮多，这里简要记录下来，后面可以温故知新。</p><h2 id="CPR"><a href="#CPR" class="headerlink" title="CPR"></a>CPR</h2><h2 id="AED"><a href="#AED" class="headerlink" title="AED"></a>AED</h2><h2 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h2><p>情景：假设你在逛商场时，有人突然晕倒，而你恰巧有红十字救护员证书，你应该怎么做？</p><ol><li>观察周围环境，确认环境安全无误（不能救人把自己命搭上去）；</li><li>确认自己做好个人防护，比如手套口罩（救人要确保自己的防护安全）；</li><li>跪在患者边上，双手轻拍患者双肩同时大声呼唤“先生先生，听得到吗”（确认患者是否还有意识）；</li><li>左手手肘撑地（假设你在患者右手边），脸贴近但不要触碰患者，口中数“1001、1002、1003…1010”（数10秒，确认患者是否还有自主呼吸）；</li><li>大声呼救，“这里有人晕倒了”（确认患者失去意识了，叫人来帮忙）；</li><li>亮明身份，“我是红十字的救护员”（不说身份不一定有人帮你）；</li><li>请人帮忙，“这位先生请帮我拨打120并告知我结果，这位女士请帮我找下AED并拿过来给我”（你要救人，肯定没时间做这些事）；</li><li>招呼懂急救的人，“现场有懂急救的朋友也请来一起帮忙”（心肺复苏按压很累的）；</li><li>掀开患者衣物，准备做CPR，也就是心肺复苏术（避免患者里面戴了啥影响按压，而且后面用AED也要掀开衣服的，患者是女生就要做个人墙再掀衣服）；</li><li>CPR按30:2来进行，按30次，嘴里数着“01、02、03…30”，人工呼吸2次；</li><li>然后AED来了后，按图示贴好左右电极片（患者右乳上方肩胛骨下方，肚脐左边肋骨下方）；</li><li>插好电源，AED会提示两次不要触碰患者，跟随AED提示，张开双臂，“请大家不要触碰患者”；</li><li>点击完成后，按下闪烁的放电键，开始继续CPR；</li><li>当患者眼睛或者手脚有反应后，停止按压；</li><li>左手手肘撑地（假设你在患者右手边），脸贴近但不要触碰患者，右手双指搭在患者喉咙处，口中数“1001、1002、1003…1010”（数10秒，确认患者恢复自主呼吸）；</li><li>确认患者恢复意识后，边帮患者拉好衣服，边人文关怀，“先生您好，刚刚您晕倒了，我帮您做了急救，同时也拨打了120，我会陪伴您到120到来”；</li></ol>]]></content>
    
    
    <summary type="html">红十字急救一些培训记录</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="救护" scheme="https://blog.felicx.eu.org/tags/%E6%95%91%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>职场语录</title>
    <link href="https://blog.felicx.eu.org/3001155188.html"/>
    <id>https://blog.felicx.eu.org/3001155188.html</id>
    <published>2024-09-01T14:04:29.000Z</published>
    <updated>2024-09-09T15:04:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经常会逛比如脉脉这些职场论坛，总能学到很多行业大佬的职场经验，这里做个记录，方便反复学习。</p><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;对如何快速适应测试组长岗位的看法与建议。</div><div class="body"><p>1. 组长还算不上真正的管理岗，不过是管理岗的必经之路，可以先试试，不做管理岗，走专家线路也是不错的；</p> <p>2. 组长通常自己还有测试任务，但是一定要留出时间处理组内的事情；</p> <p>3. 与组员的工作差别主要是要对进度和质量负责，无主的临时事情也要处理。首先要学会有效的监控进度和质量，做到对自己没有参与、不大熟悉的项目测试过程和结果好坏有判断能力；</p> <p>4. 根据遇到的问题，制定必要的日常管理和分工规则，比如各种文档整理有默认的分工，收集不紧急的事务，分到个人，项目不忙的时候处理；</p> <p>5. 向上争取资源，解决组员的问题，比如太忙的话争取人力、延长时间或缩小范围，加班多的时候争取点小福利；</p> <p>6. 抓大放小，明确原则，保证重点项目；</p> <p>7. 多倾听了解组员的意见或错误，不要因小事跟组员有冲突，组员无伤大雅的问题私下沟通消化；</p> <p>总之，组长与组员最大的区别是会增加很多沟通，随时保持清晰的思路，能识别问题，及时解决问题。</p></div></div>]]></content>
    
    
    <summary type="html">一些职场经验记录</summary>
    
    
    
    <category term="随笔" scheme="https://blog.felicx.eu.org/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="职场" scheme="https://blog.felicx.eu.org/tags/%E8%81%8C%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>零成本部署网站统计系统</title>
    <link href="https://blog.felicx.eu.org/2224651331.html"/>
    <id>https://blog.felicx.eu.org/2224651331.html</id>
    <published>2024-07-25T13:02:32.000Z</published>
    <updated>2024-07-25T13:24:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有了个人博客，想统计博客的访问流量数据该怎么办？本着一分钱不花的原则，使用 Supabase 免费数据库服务，通过 Vercel 搭建一个替代 Google Analytics 的网站数据统计。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li>首先在 GitHub 的 <a href="https://github.com/umami-software/umami">Umami</a> 项目 Fork 到自己的账号下；</li><li>在 <a href="https://supabase.com/">Supabase</a> 中创建一个项目，需要记住所设置的密码，之后会用到;<br><img src="/assets/post/20240725_qRoX27iU.webp" alt="img"></li><li>等待初始化完成点击右上角 connect 复制出需要之后使用的连接链接;<br><img src="/assets/post/20240725_6Wam74ik.webp" alt="img"><br><img src="/assets/post/20240725_6awSseWG.webp" alt="img"><br>其中 postgres:&#x2F;&#x2F;postgres.vzhpxlcldnemfwtfztfh:[YOUR-PASSWORD]@aws-0-us-west-1.pooler.supabase.com:5432&#x2F;postgres 需要将 [YOUR-PASSWORD] 调整为上一步中设置的密码;</li><li>在 <a href="https://vercel.com/">Vercel</a> 创建项目，选择自己 Fork 的 Umami;<br><img src="/assets/post/20240725_DOVJU7Nk.webp" alt="img"></li><li>添加环境变量后点击 Deploy 进行部署;<br><img src="/assets/post/20240725_V9YKa5vl.webp" alt="img"><br>其中 HASH_SALT 是你在键盘上随机输入的字符串，DATABASE_URL 为替换了密码的数据库连接地址</li><li>等待部署完成，通过项目地址或者自己绑定的域名可以进入具体的设置页面，账号是 admin，密码是 umami；<br><img src="/assets/post/20240725_Ky5NKtX8.webp" alt="img"><br>登录后可以修改密码，设置自己要统计访问的网站并获取到监听代码，之后就是在目标网站上进行部署操作了；<br><img src="/assets/post/20240725_ttp29hUS.webp" alt="img"></li><li>最后就是在 Hexo 中使用 Umami；</li></ol><ul><li>如果主题没有适配 Umami 的话，可以使用 <a href="https://hexo.io/zh-cn/api/injector">hexo injector</a> 直接注入;</li><li>在博客项目根目录，创建 scripts 文件夹;</li><li>在 scripts 文件夹下，创建 injector.js 文件并填入；<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(<span class="string">&#x27;head_end&#x27;</span>, <span class="string">&#x27;&lt;script async defer data-website-id=&quot;&lt;data-website-id&gt;&quot; src=&quot;&lt;src&gt;&quot;&gt;&lt;/script&gt;&#x27;</span>);</span><br><span class="line"><span class="comment">// 把 &lt;data-website-id&gt; 和 &lt;src&gt; 替换成在 Umami 中获取到的信息</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">用 Supabase 和 Umami 在 Vercel 上搭建个人网站数据统计</summary>
    
    
    
    <category term="折腾系列" scheme="https://blog.felicx.eu.org/categories/%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="umami" scheme="https://blog.felicx.eu.org/tags/umami/"/>
    
    <category term="supabase" scheme="https://blog.felicx.eu.org/tags/supabase/"/>
    
  </entry>
  
  <entry>
    <title>天涯神贴 KK 三部曲之第一部</title>
    <link href="https://blog.felicx.eu.org/940241892.html"/>
    <id>https://blog.felicx.eu.org/940241892.html</id>
    <published>2024-07-20T14:31:00.000Z</published>
    <updated>2024-07-26T15:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_58"><div class="nav-tabs"><div class="tab active"><a href="#tab_58-1">阅读原文</a></div><div class="tab"><a href="#tab_58-2">个人笔记</a></div></div><div class="tab-content"><div class="tab-pane active" id="tab_58-1"><h2 id="总论"><a href="#总论" class="headerlink" title="总论"></a>总论</h2><p>2010年的房地产调控，让很多人看到了希望：让房价降得再猛烈些吧。还有人更是幸灾乐祸似的呼喊：让房地产赶紧崩盘吧。让没房子的好好看看有房子的笑话，是人生的一大快事。</p><p>但是我们是不是要仔细想想，为什么调控？调控期望得到什么样的效果？</p><p>1、是如千千万万想买房子的人期望的那样，让人人买的起房吗？</p><p>2、是如千千万万的流氓无产者期望的那样，让房地产崩盘，开发商上吊，地方政府不再靠卖地实现GDP吗？</p><p>2010年房价下跌已经变成了人民最急切的期望，已经高过了解决超贫困家庭的温饱问题，已经超过了子女教育，医疗和养老。并且为房地产必须下降提出了若干义正言辞理由，总结下来无外乎三条：</p><p><strong>1、人人都有居住权。房子是用来住的，不是用来炒的。</strong><br><strong>2、房子太贵了，租售比严重不合理，空置率太高，人均收入太低，早晚要崩盘。</strong><br><strong>3、房价上涨造成物价上涨，人民生活变得困难。</strong></p><p>的确，当经济过热，房价过高，会对经济运行和社会安定带来较高的风险。这也是国家所担忧的。防范金融风险，一切维稳才是中央考虑的重中之中。</p><p>而民间所总结的三条，应该和调控的原因和目的基本不沾边。让我们一条一条的分析一下：</p><p><strong>1、人人都有居住权。房子是用来住的，不是用来炒的。</strong></p><p>其实这是一个伪命题。房子包括房屋及房屋所属的土地两个部分。房屋本身只有居住价值；而土地所具备稀缺性，决定了土地的投资价值。房地产贵的不是房屋，而是房屋下面那块地皮。所以商品房具备了投资与自住双重属性。</p><p>任志强说的并没有错，居者有其屋并不等于人人享有商品房的产权。居住的房屋也不等于商品房。</p><p><strong>2、房子太贵了，租售比严重不合理，空置率太高，人均收入太低，早晚要崩盘。</strong></p><p>这个问题比较大。房价是不是太贵了？有没有泡沫？</p><p>我们首先从国民的收入结构来分析</p><p>一个遵从“丛林法则”的精英社会决定了国民收入的金字塔结构。</p><p>既然是金字塔，底端的中低收入者占据了金子塔的最大比例，但是大家要知道金字塔的顶端既使只有 10% 人口，那也将是一个 1 亿多的绝对庞大的数字，远远超过了绝大多数西方国家的人口总和。</p><p>而北上广深以及三十多个省会，这些个靠掠夺全国或者一省资源，以牺牲大多数人口的利益为代价发展壮大起来的超大型及大型城市，需要容纳全国 1 亿多的精英人群，是否能得出房地产严重泡沫，空置率过高的结论？</p><p>当低收入者们努力挥洒汗水期望着自己年薪能够超过 5 万，8 万，10 万。。。的时候，他们可能做梦也想不出精英阶层手中究竟拥有多少财富。</p><p>精英们会象流氓无产者们一厢情愿认为的那样：因为一个区区房产税而恐慌性抛弃手中的大量房产吗？</p><p>答案显然是否定的。</p><p>可以确认的是，<strong>房价不是由统计局的平均收入决定的。而是精英的平均收入决定的。</strong></p><p>便于分析，我们剥离掉商品房（注意：只是商品房，而不是房屋）的社会属性，先把它看做商品。是商品就有他的内在规律。</p><p><strong>什么决定商品的价格，价值？对不起，我只能说你上学上傻了。</strong></p><p><strong>是供求关系，只有供求关系。</strong></p><p>我们判断一个核心城市市区内的商品房是具备足够稀缺性的。</p><p>如果你在北京海淀区上班，即使你在山海关拥有 1000 平方米的住宅也不能替代你住在北京市近郊区以内的愿望。而无论你是租房，分房还是买房，只要你<br>还在海淀区上班，你就必须住在北京市近郊区以内。</p><p>假设你挣得钱不足够多，你需要租一套房子解决你的上班问题，上班距离的远近及居住的质量，取决于你愿意支付的租金。</p><p>假设你的钱够买房子，我相信你更愿意买房，因为你可以拥有房屋的产权和房产增值的收益。而买房子的大小，品质，离你上班的远近，取决于你手中的资金和你对未来收入的预期。</p><p>买房问题很象是中国的上学问题，而且简直是异曲同工。</p><p>假设你家附近有个重点中学，教学质量很好，考大学几率很高，而其他的学校你觉得不理想，你肯定希望无论如何自家小孩也要上这个重点中学。</p><p>上重点中学凭什么？我们简单的剥离掉其他社会因素的影响，可以认为想上重点中学就要凭好成绩，小孩努力考到前多少名，就可以上重点中学。</p><p>这与努力赚钱买房是一个道理，有钱的出高价就能买到好位置好环境的房子。</p><p>我们再加入社会因素的影响，比如某大人物看到这个中学很抢手，很可以赚一笔，于是就设计了加分项，谁给自己送的钱多，就给谁加分，于是小孩要上重点中学不但要考高分，还要送钱加分。</p><p>同理，<strong>当好位置的商品房成为稀缺资源，</strong>各类炒房客的出现是必然的。</p><p>如果说炒房客加高价给最终住户的行为会产生泡沫，那么重点小学和公立幼儿园高昂的择校费应不应该也叫做泡沫？</p><p>尽管炒房和公立幼儿园加价成为普遍的社会现象是令人痛心的，但它们不以刚需人群的意志为转移的存在着，且与泡沫无关。</p><p>最被提及与泡沫有关的是以下两点：</p><p><strong>第一，中国的房价甚至高于某些发达国家的房价。</strong></p><p>其实，众所周知的是：不光房价高于某些发达国家，石油，高速，教育，医疗，税收等费用都远远高于某些发达国家。</p><p>而且中国的精英人群尽管所占比例不大，但是绝对数量足够大，而且精英平均收入甚至远远高于某些发达国家的收入水平。</p><p>未来 10 年还得涨，从前 10 年看后 10 年，按照经济科技发展的速度。涨价幅度可能比之前更猛。</p><p><strong>第二：租售比问题</strong></p><p>这个问题不用过多解释，使租售比更合理的方法不是只有降低房价一种，还有一种更靠谱的：<strong>房租大幅度上涨。而且已经在行动中。</strong>房租长期保持低价就像 1990 年以前的和田玉长期保持低价一样不可能。</p><p><strong>3、房价上涨造成物价上涨，人民生活变得困难。</strong></p><p>这个问题其实也不用多解释，懂经济学的该明白自然会明白，不会轻易被忽悠，不懂的解释半天也不会明白。</p><p>简单的可以这样说，物价上涨是经济过热，钞票印多了的后果。而房地产因为稀缺性和易保存比较吸金，所以吸收了大量的钞票，以至于大家光看到了房地产的飞涨。</p><p><strong>其实如果房地产交易量下降，不再具有吸金功能，那么农产品等生活必须品以及房屋租金等等就会大幅上涨。</strong>这是因为多出来的大量钞票总要有个流向，如果不被房地产吸收，就会被大蒜，绿豆，姜，及全部生活必须品的上涨来吸收。</p><p>事实也证明确实如此。2010年房产调控后，物价上涨的势头非常迅猛。</p><p><strong>那麽是不是房地产就没有泡沫呢？</strong></p><p>这个问题谁也不知道，因为到现在政府拿不出一份权威的数据来说明房地产到底有无泡沫。</p><p>但是房价高了就有风险，政府从感性上还是有清楚认识的。</p><p>注意，我们前面啰嗦了很多，现在才开始接近真相。</p><h2 id="这次调控的真实意图，防范金融风险"><a href="#这次调控的真实意图，防范金融风险" class="headerlink" title="这次调控的真实意图，防范金融风险"></a>这次调控的真实意图，防范金融风险</h2><p>辨别利益是看透一切事物真相的武器。</p><p>高房价谁是受益者？</p><p>诸侯、开发商、炒房客。</p><p><strong>独独缺了中央。</strong></p><p>这时你是否猜到中央为什么要调控？如果还猜不到没关系，听我道来。</p><p><strong>纵观古今上位者最不能容忍的是别人受益，自己被黑锅。</strong></p><p>大开发商，小开发商，大炒房客，小炒房客，地方政府都是收益者，但是风险却由中央来抗。这是一笔很不划算的买卖。</p><p>而房地产混战的局面，造成了国家队央企成员只有凭财大气粗高价拿地的份，钱花的最多，风险却抗的最大。</p><p><strong>中央深深的感觉到要想国家队受益，要想控制风险只有做到两个字：垄断。</strong></p><p><strong>【PS：一语道出真相，垄断是最赚钱的买卖，稀缺资源永远要掌控在上位者手中，就好比西游记中的蟠桃、丹药等，垄断决定话语权】</strong></p><p>提高资金门槛，让小开发商，小炒房客，有点钱的小老百姓退出这个游戏。房地产很好玩，但不是小人物应该玩的。</p><p>先让市场冷静，彻底整顿，踢出那些个跳梁小丑，然后国家队出马，绝对垄断的市场，才能够统一定价，才能够控制风险，才能够利润最大化。</p><p>既然油价高于美国是合理的，那麽房价高于美国一定也是合理的，关键在于垄断。</p><p>不仅仅是房价的垄断，因为过高的垄断定价将会使交易量下降，国家队也需要资金周转。</p><p><strong>真正厉害的，还是房租的垄断。公租房的推出是房租垄断进程的里程碑。</strong></p><p>至于苦等廉租房的同志，不要抱太大的希望。城市要建设、地铁、广场，政府大楼都要上马，钱从哪里来？不会无缘无故凭空出来。</p><p>想想小学就近上学，但是重点小学真的就近就能上吗？小学名额可以寻租，经适房、廉租房也是一个道理。</p><p><strong>篇外：统计数据</strong></p><p>说到房产泡沫的问题，就不得说说官方的统计数据。</p><p>官方的统计数据从来是可以很雷，但不可以很真。</p><p><strong>我们的统计原则基本就是：村骗乡，乡骗县，一骗骗到国务院。</strong></p><p>不知道有人去市、县、乡、村进行过社会调查没有？</p><p>社会调查是怎么一回事？</p><p>我来告诉你，所有的关于人口、收入、田地、贫困户的数据都是官方统一编写，统一口径，如果胆敢有哪个小民对调查人员乱说，那是吃不了兜着走的。</p><p>你问数据编来编去的意义在哪里呢？</p><p>意义很大，起码跟向上申请拨款是关系非常密切的。数据不假，钱从哪来？</p><p>统计数据无所谓是否真实并不重要，重要的是它是或缺利益的重要手段。</p><p>假设官方想证明房地产不存在泡沫，那么一定拿的出不存在泡沫的统计数据作证。</p><p>反之，也一样。</p><p>好比，CCTV 为了证明高空置率的结论，派出记者专门找偏远且刚刚完工的楼盘，进行了一次纯粹为了证明内部已事先得出结论的毫无科学依据的调研。</p><p>而地方政府，为了证明刚需多么强劲，也立刻拿出了选择性失明的统计数据来进行回击。</p><p>无论是左还是右，同样都是不科学，都是先有结论，再有证据。</p><p><strong>我们到底应该信谁</strong></p><p>商品房本来名字中就有<strong>商品</strong>二字，不准投资岂不是笑话？真正不准投资的那叫公房，这才是保证老百姓有房住的关键。</p><p>商品房诞生的时候就很明确是：改善居民居住<strong>条件</strong>的，现在政府怪商品房价格过高造成老百姓没房住本来就是颠倒黑白，政府不造保障老百姓居住的公房，而让老百姓去购买改善居住条件的商品房来解决本该政府解决的居住问题，政府不作为才是造成老百姓出现居住问题的罪魁祸首。</p><p>我不期望人人有房，我只希望每一个在城市里找到工作的人通过努力工作勤俭持家能在生活城市里有希望拥有一套安稳的房子来容身，不管这房子的性质是商品房、经适房、廉租房或者其他什么房子。</p><p>【网友说：你说的正是根源所在啊，政府的职责应该向无房者提供的保障房，建成经适房、两限房，被权贵占有牟利，而非要把商品房赋予稳定社会的职能。政府不是不知道问题的根源，而是不愿意放弃巨大的利益】</p><h2 id="房地产游戏的模式"><a href="#房地产游戏的模式" class="headerlink" title="房地产游戏的模式"></a>房地产游戏的模式</h2><p>三个环节：地方政府卖地、银行贷款、开发商在二级市场销售。</p><p>地方政府卖地之后，剩余的风险和收益都归银行和开发商。</p><p>地方政府卖地的款则用于地方广场、地铁、公路之类的建设和权贵的挥霍。</p><p>地方政府只负责卖地，是无风险的买卖。当然还有人企图利用流氓无产者和无知群众的群情激奋来进一步收取房产税来提高地方政府收入。</p><p>税收从来都是向下游转嫁的，政府多收出来的钱一定是通过最下游的房租来体现。</p><p>当然，也有很多明白人士大声疾呼反对房产税。</p><p>自古而今，即使最辉煌的朝代，最被广大群众津津乐道的太平盛世，普通群众也仅仅只是解决了温饱而已，包括贞观、文景、康乾。</p><p>国家的富庶都是以老百姓勒紧裤腰带为代价的。</p><p>所以，政府是不会理会部分明白人反对房产税的呼声的。</p><p>真正对房产税的顾及来自于地方政府对土地出卖前途的担忧，真是鱼与熊掌不可兼得。</p><p>尽管流氓无产者和无知群众的呼声很高，然而房产税征收一旦实际操作起来，就会变的不得人心，征收难度非常之大，实际效果难以预知。也就是说政府没有底。而如果房产税征收效果不佳，地方政府卖地收入再受到巨大影响，那就真正是得不偿失了。</p><p>就会变成赔了夫人又折兵。这样的买卖，政府是不会轻易做的。</p><p>房地产的现状是，商品房二级市场是由各种类型的开发商自由竞争的，一手房开发商之间的竞争，二手房投资客之间的的竞争。</p><p>房价为什麽在一个自由竞争的市场上能够持续上涨？因为稀缺性。不是房屋的稀缺性，而是房屋所必须占用的土地的稀缺性。</p><p>有些群情激奋的群众立刻以 6500 万套房子空置的事情提出质疑，还有 CCTV 的报道，那是要多煽情又多煽情。</p><p>我们无需说 6500 万套的真实性（明白人都知道非常离谱）和空置率的科学性。为什么不说，因为这种稀缺性跟空置率就完全没有关系。商品房的稀缺性是相对人民币而言的。人民币印多了，资金没地方去，商品房就涨价了。</p><p>垄断的市场是没有风险的，土地是完全垄断的，所以地方政府完全没有风险。</p><p>而商品房是自由竞争的市场，是具备风险属性的，尽管由于大量印钞造成了商品房的飞涨，但随着房价的高涨，风险也在积聚。</p><p>地方政府土地垄断没有风险，完全可以置身事外。</p><p>可是银行呢？属于国家的银行。</p><p>银行正在承担自由竞争市场房价高涨积聚的风险。</p><p>这是中央不允许看到的，地方政府受益，而风险全部甩给中央。</p><p>既然垄断的市场是没有风险的，那还是让房屋和土地一起垄断好了。</p><p>垄断还可以解决一个问题：社会稳定。</p><p>常被媒体和群情激奋群众所提及的一个重要问题就是:<strong>房价收入比</strong>。</p><p>大量印刷的人民币促成了房价高涨（因为商品房实在是具备了大资金需要的所有投资品属性），可是那些个巨额的资金普通老百姓并没有见到。</p><p>路人甲：我们一个月就挣 2000 多块钱，干一辈子买不起房啊。</p><p>路人乙：我一个月上万都买不起房。</p><p>媒体：一个家庭不吃不喝 22 年买一套房。</p><p>大量的疯狂印刷的人民币在哪里呢？</p><p>在精英手里。</p><p>我们再回顾一下开篇，<strong>我们奉行的是精英社会，丛林法则，金字塔式收入结构。</strong></p><p>人民币再多，也不可能流到金字塔的底端。</p><p>地方政府垄断卖地也就让百姓们发发牢骚。</p><p>而炒房客，开发商赚的盆满钵满就让生活在中下层的老百姓眼红和不能容忍。</p><p>不患寡而患不均啊。</p><p>垄断，国家队的垄断，可以解决眼红问题，也就是社会稳定问题。</p><p>还有一个最重要的问题：银行和民营开发商之间，是官与民之间的问题。</p><p><strong>而银行和国家队央企，是左兜和右兜的问题。【PS：国家垄断还有利于稳定，便是这种不均的问题，真是控民于心，得心应手】</strong></p><h2 id="房屋垄断"><a href="#房屋垄断" class="headerlink" title="房屋垄断"></a>房屋垄断</h2><p>土地是垄断的，<strong>然而房屋垄断并不是一件容易的事情。</strong></p><p>因为民间百姓手里是存在大量二手房的.当然这也是为什么调控的板子只打在二套房、投资客、炒房客身上的原因。</p><p>同样，房租的垄断也并不是一件容易的事情，因为民间百姓手中的大量二手房都具备出租的特性。</p><p><strong>要垄断，必须抓住源头。</strong></p><p>源头在哪里？</p><p>在一级市场，而不是二级市场。</p><p>房地产的垄断就是要国家队从一级市场做起，从一级市场开发着手完成对商品房开发的垄断。</p><p>一级市场，那是一个高高的门槛，民间资金，就让他该干嘛干嘛吧，房地产不是你玩的。</p><p>一级市场包括的内容是一般开发商无法参与的：城市规划，城中村改造，旧房拆迁，城市综合体开发。</p><p>可以说从规划、改造拆迁、开发、到二级市场销售，一条龙服务。</p><p>一级市场开发的最大特点就是可以创造需求：你不是有房子吗？我拆掉你的房子，看你有没有刚需。</p><p>国家垄断控制风险的意义还在于：需求可以拆出来。</p><p>以后的路，民营开发商的日子将变得越发艰难。</p><p>土地是地方政府的，商品房开发是央企和国企的。</p><p>处于金字塔下层的 40% 家庭，如果还没有一套自己的房子，那么买一套自己的房子就越发的变得不可能。</p><p>商品房将逐渐往金字塔的上层积聚。</p><p>处于金字塔下层 40% 的无房家庭将只能以租房来解决居住问题。</p><p>租金的快速上涨期即将到来，政府已经盯上了房租这块巨大的蛋糕。因为房租的收益比房产税更靠谱，更具有操作性。</p><p>公租房，呼之欲出。</p><p><strong>自古以来，民生问题的底线就是不要出现陈胜、吴广的极端情况。所以政府更在意的是农民问题。【PS：农民无底限，政府只要把握住某条红线，就不会出现陈吴之人】</strong></p><p>因为历史的改朝换代都是大饥荒引起的，无论是汉末、隋末、唐末、还是明末。农产品价格的上涨对政府的震动要远远大于房价的上涨。</p><p>农民具备最原始的力量，而他们关心的并不是三线以上城市的房价，而是能否填饱肚子。</p><p><strong>而关心自己能否拥有一套产权房的都市白领，除了呻吟一下意外，几乎是没有什么有效反抗的可能的。</strong></p><p>中国自古以来都不是人人都能有属于自己的房子，大量的丫鬟、仆妇、管家、小厮寄养在权贵人家，身体都是不自由的，何谈拥有自己的房子。</p><p>自古以来，最多的就是失去土地的农民，住在地主家做长工，又何谈属于自己的房子。</p><p>只要是有贫富差距的社会，只要存在阶级，只要存在统治和被统治，这个社会就会不以人的意志为转移的出现大量的底层居民，没有这些底层居民。权贵就不能很好的生活。【PS：没有阶级就没有人性，有人性就会有阶级】</p><p>为了权贵生活的更好，就要维持大量的底层群众。</p><p>权贵必须保证大量底层群众的基本生活，才能够让自己过得更舒服，仅此而已。这就是民生。</p><p>（呻吟一下）。君不见，天涯上多少盼着被美军解放的铁杆准汉奸，政府楼被炸，七成网民不是替死者默哀，而是一片欢呼。为什么会有这样的民意，参考前苏联，政府确实应三思。</p><p>爱国是与中华的历史分不开的，自秦统一以来，中国由封建时代转变为帝国时代，只有在项羽焚烧咸阳后，对诸侯进行了一次分封，但时间非常短暂，刘邦重新统一了天下，帝国时代经历了漫长的汉、唐、宋、元、明、清。天下一统的爱国情结是根深蒂固的。</p><p>而在秦以前，与中世纪的欧洲是极为相似的，齐国人可以到秦国做宰相，赵国人可以到燕国做将军。中世纪法国的诺曼底公爵可以到英格兰继承王位，瑞典的贵族可以到基普做大公，封建时代的国家概念并不是明显。欧洲经历了漫长的封建时代，国家观念很淡薄，能够抛弃国家货币成立欧盟就是明证。这对于漫长帝国时代，天下一统的国家是很难想象的。</p><p>爱国只跟历史文化传统有关。</p><p>1978 年越南入侵红色高棉，当时的红色高棉对内实行红色恐怖，以共产主义的名义对全国 700 万人口进行奴役和屠杀，总共屠杀了 100 万人。当越南军入侵时，受到了广大柬埔寨群众的热烈欢迎，称越南军解放柬埔寨是解放人类的战争。</p><p>红色高棉失去了民心，必然败亡。</p><p>那时，为了支援红色高棉，中越战争打响。有我国的强力支持，红色高棉仍然走向败亡。【PS：没有民众，失去民心，再强大的帝国支援也是枉然，得道多助，失道寡助也】</p><p>但我们还没有谈到所谓“造反”的地步，只是说房价如你所述——暴涨。中国的中产和以上人士将进一步携款合法外流（在房价暴涨的 09 年，中国外流人口达到历史峰值）。这一部分人利益如何保证？您觉得政府不需要考虑对么？</p><p>现在社会跟几百年前最大的不同是，世界是开放的，这得益于地理大发现和<strong>世界经济一体化</strong>，即使缅甸、朝鲜这样封闭的国家也免不了受到来自世界范围的影响。大一统的集权社会融入了西方民主的思想，同时互联网的出现也让人们对过去的思维进行了再思考。【PS：文化的普及，将有部分人会觉醒，尽管只是少部分，却可以改变世界】</p><p>尽管底层百姓出国还是一个梦想，但对于精英人群，基本上是在世界范围自由流动的。【PS：君不见，16 亿人口，真正可以出国定居的又有多少】</p><p>中国自古以来，商人都是没有地位的，商人的财产可以随时被官员没收，自古如此，至今如此，即使是今天也并没有出现私人财产神圣不可侵犯的宣言。即使出现了，也没有任何可以操作的可能。【PS：只要不是当权者，一切都是羔羊、肥猪，只要成熟便会被屠杀，屁民是韭菜，会一代一代的被收割】</p><p>明朝以后大量的商人移居海外成了华侨，现今的商人为了安全移居海外也不是什么新鲜事，不过是步明朝华侨的后尘罢了，政府会真的放在心上吗？朱元璋没有放在心上，朱棣没有放在心上，现在同样也不会放在心上。【PS：明朝首富沈万三，可能是商人外移的觉醒，富可敌国又如何？最终被收割】</p><p><strong>真正可怕的是官员一方面谋取私利一方面把亲属和存款送到国外，这其实是一种国家背叛。</strong>在国内榨干老百姓的血汗，得到的金钱却在国外挥霍。什么叫卖国，不过如此。</p><p>不过从政府要分租房市场的蛋糕而言，我有不同的看法：</p><p><strong>政府的公租房要想租出好价格，有两种方式</strong></p><p>1）减少市场可出租房源（北京就这样干了，拆迁廉价城中村）</p><p>2）提高竞争房源的成本。（所以我认为推出房产税是大概率的事情，因为政府的公租房是不需要交房产税的）</p><p>于是竞争房源的房租暴涨，政府的公租房也就可以羞羞答答的打个 9 折来安抚一些底层了，反正所有的黑锅都有竞争房源的房东背了。【PS：背后的一只大手，随时都在薅着底层百姓的羊毛】</p><p><strong>房产税的问题，我觉得政府还是慎重的</strong></p><p>1、如果采用不公平法则</p><p>公务员，垄断企业，事业单位的福利房不上税，权贵与利益集团购买囤积的大量商品房不上税，只有普通百姓上税，会加剧社会矛盾，而房产税会大幅提升租金，在公租房没有大量建起来之前，对稳定不利，维稳才是第一要务。</p><p>2、如果实行公平法则小产权房，福利房，权贵囤积房都要上税，执行难度太大，可操作性不强，阻力几乎难以逾越。如果真的收房产税，采用不公平法则的可能性最大，普通的无房百姓生活将变得非常艰难。【PS：想动贵族利益，自古没有好结束，只有强权变法可以坚持一段时间，一旦遭到反击，维稳将会破灭，收割底层老百姓，才是最好的方法，两害取其轻是也】</p><p><strong>维稳问题其实最终还是吃饭问题。</strong></p><p>房价上涨可以不买，如果房租价格不能控制，农产品价格不能控制。一旦大批群众吃饭出现了问题，维稳就无从谈起了。这个底线，还是要严守的。</p><p><strong>说到公租房问题</strong></p><p>首先还是要提到我们实行的双轨制。</p><p>从某一方面可以简单的理解为统治阶级内和统治阶级外。</p><p>也就是我们常说的体制内，体制外。</p><p>体制内:公务员、垄断企业及医院、高校、科研院所等事业单位。</p><p>体制外：外资、私企打工者，个体工商户，农民，这里面也应当包括高层的老板和最底层的长期无业人员。</p><p>我们感受最深的就是涨工资的问题，一旦政府涨工资，那就一定是体制内涨工资，跟体制外完全没有关系。</p><p>在金融危机的 08 年，大批企业关门，减薪，裁员，美国欧洲因为钱紧不得不降低公务员薪水。而这时，我们神奇的国家在干一件事：公务员普遍加薪，是为了全国百姓着想—刺激消费。【PS：应该还是以维稳为主，稳定体制内的人，让他们过得安逸，国家才会舒服，至于屁民只能紧衣缩食，有吃就行】</p><p>还有保障房问题，这个也是我们感受最深的：保障房&#x3D;公务员及垄断企业住房；解决住房问题变成了如何让领导干部住更多更大的房子，如何让体制内员工拥有足够舒适住房的问题。</p><p>体制外的群众，那是别想得到一点好处的。谁让你是被统治阶级呢。</p><p><strong>公租房的推出，也要解决两个问题：</strong></p><p>1、体制内的最下层（最下层也是统治阶级，也就是是古代官吏中的吏）员工的基本住房问题。</p><p>2、向体制外被统治的小民稳定收钱的问题。【PS：哪怕底层的吏，经济收入低，但他们可以有福利，收取租金等，便可以安逸，铁饭碗便是如此】</p><p>以国有企业为主导，发展住房租赁市场。这是现在的政策。</p><p><strong>商人还是要分的吧：</strong></p><p>红顶商人就是官商，统治阶级，那是上位者。普通商人，比如开个袜子厂赚个辛苦钱，最后袜子厂不挣钱了，官员还天天找他，让他孝敬，他就只好移民了。普通商人在中国也是海量的，有点钱，但是没一点地位。</p><p>房产税无论是持有环节征收，还是交易环节征收都是要向最终租房人转嫁的。</p><p>好比鸡饲料上涨没有可能鸡肉不涨价，但是养鸡的并没有赚更多钱。</p><p><strong>降低百姓租房困难的唯一国际通行办法就是减税。</strong>但是减税，在我国是很难行的通的。一个高增长高通胀的国家，高昂的腐败成本和巨大的浪费将导致国家必须维持高税收才能维持运转，GDP 保 8 实际上是必须的也是迫不得已的。维持正常的运转，维持庞大的消耗税收而不是创造税收的公务员队伍，没有 GDP 快速的增长怎么可能呢。</p><h2 id="政府为什么要调控"><a href="#政府为什么要调控" class="headerlink" title="政府为什么要调控"></a>政府为什么要调控</h2><p>难道就为了给你说的 P 民面子？</p><p>如果房价一直暴涨，不更符合食利阶层的利益？房价低价一起彪～</p><p>真不知道你仔细看了没有。我通篇也没下过调控是为了给 P 民面子的结论。</p><p>调控的根本原因还是中央在房地产的游戏中没有得到好处。调控是为了让中央的国家队参与进来，成为主体。</p><p><strong>垄断的目的还在于能够控制价格，为了维稳，</strong>中央是不希望暴涨的，但也不希望不涨。</p><p><strong>回头还说公租房</strong></p><p>在私企打过工的都知道，毫无归属感可言，老板脑袋一发热，随时让员工卷铺盖卷走人。那是要多没保障有多没保障。原因是社会关系，关键客户，都掌握在老板一个人手里，员工就是打个下手，一不爽，就换人呗。</p><p>统治者可知道不能这么用人的。一个庞大的国家机器要想正常运转，必须得让手下的和自己的利益一致。如果自己吃肉，手下的连汤都没得喝，这个机器就转不动了。</p><p>因此，在房价高涨的时代，保障房才成为中央默认的公务员房、垄断企业房。</p><p>公租房首要解决的就是手下里面最底层人士的住房问题。【PS：跟着国家走，有肉吃有汤喝，但凡出现公务员增加，必定是因为福利太好了】</p><p>我认为针对于体制内来说，无论是公务员，事业单位，还是国有企业的初级员工，都可以通过所在单位申请公租房，公租房的租金会略低于市场，主要是单位一定会提供补贴。</p><p>体制外对公租房的申请就没有那么幸运了。</p><p><strong>钱的问题，地方政府也想到了解决的办法。</strong></p><p>在卖地时就要求开发商配套建设一定比例的经适房、廉租房或公租房。【PS：一旦形成垄断，就形成绝对的控制权，开发商想要有活干，必须要满足政府的要求，你占大头，但小头必须有我一份】</p><p>然而，羊毛出在羊身上，开发商不可能做赔本的买卖。经适房好说，反正是卖个住户，大不了利润很低，顶多挣得少点。而廉租房和公租房就纯粹是只见投入不见产出的（开发商可没资金没耐心收租子）。廉租房和公租房的建设成本必须加到所建的商品房身上，这肯定会抬高房价。【PS：一消一涨，最后倒霉的永远是底层百姓】</p><p>关键是拿地成本逐年上涨，孝敬的资金也在逐年上涨，在加上多出来的廉租房和公租房建设成本，房价不可能无限抬高的。开发商也需要资金回笼周转。房价越高风险越大这是无论政府，开发商，炒房客和买房群众都有的共识。只是房价多高才是高，不同的人理解是不同的。</p><p>显然，把大量廉租房和公租房的建设寄托在开发商配套身上是完全行不通的，不仅不能解决住房问题，还让本来就高企的房价更加雪上加霜。</p><p><strong>体制内公务员、垄断企业和事业单位的员工住房问题是不难解决的，因为有政府行为的强制意志在里面。</strong></p><p>1、地方划拨土地，征集开发商建经适房、公租房。</p><p>2、地方政府强制要求开发商建配套经适房、公租房，建设成本就转嫁给购买商品房的冤大头吧。</p><p>3、体制内单位自有土地，集资建房。</p><p>多管齐下，体制内人员的住房不难解决，甚至体制内人员每人住好房子大房子多套房子的问题都不难解决。处于金字塔的中上层，他们俯瞰着芸芸众生。</p><p>处于金字塔下层的体制外的广大群众怎么办？</p><p>体制内员工的住房舒适性和投资获利是首要保证的，不然光让干活不给好处，怎么能让手下听话呢？</p><p>体制外广大群众的住房问题也要解决，这关系到社会稳定。</p><p>能不能拿出一个办法，即解决了群众住房问题，又可以从群众手里长期获取收益？</p><p>细水长流收租子的事情开发商做不了，但政府可以做。</p><p>公租房，如果解决了钱的问题，面向广大群众的公租房的推出，将会取得双赢的局面。</p><p>既然房地产开发最肥的肉留给了国家队，国家队也应该投身到公租房的建设中来。</p><p>国家队全面进场之前，大鱼小鱼虾米泥鳅，皆可得利。</p><p>不把小鱼虾米泥鳅赶出池塘，市场无法控制，风险无法控制，公租房建设也无从谈起。</p><p>二套房首付提高到 50%，第三套房停止贷款，小开发商的清理整顿，民营企业在招拍挂中无论价高价低都无法取得土地，等等一系列重拳直击小鱼虾米。</p><p><strong>土地将回到国家队手中，这个世界将变得清爽。</strong></p><p>让时光倒流到 80、90 年代，我们的地方政府守着蕴藏着巨大财富的金矿、锡矿、铜矿却过着贫穷的日子。</p><p>没有资金，矿山是没有办法变成财富的。于是招商引资，为了 GDP,为了解决就业问题，出台了各种优惠政策，于是外商堂而皇之的走进来了。成为了这些矿山的主人。</p><p>5 年，7 年或者 10 年，外商享受的免税期满的时候，外商卷着巨额财富走了，留下了一个个废弃的充满危险的大坑。这是血琳琳的教训，政府没有理由不吸取。外资、私企、小业主总有一天会让他们清场，尽管这一天晚来了十几年。</p><p>在土地日益稀缺的今天，房租难道不是可持续产出的金矿？让炒房客、投资客、民企开发商见鬼去吧。</p><p>宁愿住桥洞的早晚要当盲流处理的</p><p>逃离城市基本是一部分人被淘汰掉，选择，离开，而又有更多的人冲进去。</p><p>房租收入下降基本是做梦才会出现的事情，国家队的进场就是不让房租下降。</p><p>商品房和公租房的区别实际就是土地性质的不同：一个是出让，一个是划拨。</p><p>出让那必须是招拍挂（招标、拍卖、挂牌），那必须是天价。</p><p>划拨就基本算是白给，收钱就是象征性的意思意思。</p><p>是商品房还是公租房，土地的性质说了算，地方政府说了算。跟房屋质量没有关系。</p><p>一套房子假设 20000 一平，房子的价值也就占 30%，剩余的都是土地的价值。</p><h2 id="无耻-提通过税收调节房价、收入"><a href="#无耻-提通过税收调节房价、收入" class="headerlink" title="无耻 - 提通过税收调节房价、收入"></a>无耻 - 提通过税收调节房价、收入</h2><p>今天看到搜狐上一篇文章说到<strong>要通过征税来调节贫富差距，提出这个方案的人不知是无知还是故意，如果政府听了这种无耻参谋的建议，不知道多少老百姓会活的更惨。</strong></p><p>假设出台又一个新税种，无论它叫什么，我们暂定为财产税。既然有了新税种，就要定任务，那好了，为了这个税种制定了年上缴多少多少的任务。【PS：无论国家出台什么样的新政策，都会有地方或部门争功，定任务，表示积极拥护】</p><p>实操的时候，执行的工作人员发现一旦轮到权贵脑袋上的事就没办法执行，你执行，他先让你下课。</p><p>但是任务必须完成，那还是从普通老百姓身上打主意吧。于是政策就完全走样了，非但起不了劫富济贫的目的，反而加重了穷人的负担。</p><p>往近里说，个人所得税，挣的是谁的税？权贵没看见交，月薪 3000 块的工薪层可一个都跑不了。3000 块月薪上缴的个人所得税你看着不多，可对于养孩子糊口的老百姓来说，哪怕 10 块钱都是重要的。他们可没有资本像月薪上万的小资一样动不动花 500 块钱泡个吧。</p><p>个人所得税是有任务的，工作人员必须完成任务，税别管是局级干部交的，还是连孩子幼儿园都上不起的穷光蛋交的，总之完成任务就是好样的。既然局长的税收不上来，就要从穷光蛋身上加倍收上来。</p><p>往远里说，王安石变法是怎么失败的，以史为鉴可以知得失。王安石的初衷难道不是好的吗，可结果怎么样呢？只有一个——民不聊生。</p><p>书生误国啊。</p><p>许多兄弟关心房价什么时候会涨。</p><p><strong>那么先看看这次调控后都出现了什么样的现象。</strong></p><p>1、全国房产成交量大幅下降</p><p>2、一线城市房价略有下跌，但并不持续，到现在基本跌不动了</p><p>3、多数二三线城市房价不跌反涨，成交量逐渐回升</p><p>4、大多数二线以上城市租金持续上涨</p><p>5、农产品价格有上涨迹象，大蒜、姜等小品种农产品遭遇爆炒。</p><p>6、变化莫测的政策导致精英阶层出现移民潮</p><p>还有什么，欢迎大家补充。</p><p>农产品价格的上涨是很值得警惕的。想买房子但嫌房子贵的都市白领对农产品的价格很不敏感，但是金字塔最底层的最大多数群众是很敏感的。领导们也很敏感。这牵扯到相当大比例人口的吃饭问题，稳定压倒一切。【PS：治国如治家，当家里的人都吃不上饭时，这个家就散了，稳定压倒一切，真乃绝句】</p><p>农产品价格的抬头将会导致物价全面上涨，在不引起质变的前提下，房价作为商品也不例外。<strong>这个引起质变的前提是出现饥荒的极端情况，这样的几率在现在社会很少。</strong>尽管干旱和洪涝使农产品大幅度减产，但是农产品还可以进口，国家还有粮食储备，保证全国人民填饱肚子还是不存在问题的。</p><p>一线城市仍然沉默，国家队在积极运动。二三线城市的房价上涨的成交量的回升却给了市场一个明确的信号。这是资金运动的规律。国家队对一线城市的布局，迫使资金流向二三线城市。二三线城市相对（与一线城市相比）不高的价位给出了较大上升空间的预期。</p><p>全国富人买北京上海，全省富人买省会，房价的合理性已经不能用简单的本地平均收入来衡量。<strong>精英阶层的购买力才是关键。</strong></p><h2 id="明年物价进入持续上涨期是一个不容回避的问题"><a href="#明年物价进入持续上涨期是一个不容回避的问题" class="headerlink" title="明年物价进入持续上涨期是一个不容回避的问题"></a>明年物价进入持续上涨期是一个不容回避的问题</h2><p>在资金总量不变的前提下，巨量资金推动农产品价格上涨或者推动房价上涨是一个必须的选择。</p><p>今年政府用行政手段严厉打击蒜和绿豆价格的暴炒，基本上没有起到作用，资金有自己的运作规律，光靠拿张悟本出气也不能解决问题。</p><p>二三线城市的房价的上涨使与一线城市的差价缩小，为一线城市的发力提供了动能。</p><p>无论你喜欢还是不喜欢，都不是以人的意志为转移的。</p><p>许多人心怀房价肯定会跌回 2004 年的美好愿望，刻舟求剑似的思维错过了一次次购房的机会。在患得患失中，在牛刀的号角声中，在任志强的大炮声中，迷失了自我。</p><p>任何事物都是有其规律性的。关键是否有一双慧眼能够穿透重重的迷雾。</p><p>假设你是个投资客，你非要去石家庄和长沙买房子，结果发现不怎么升值，怨天怨地：</p><p>石家庄作为一个二线省会怎么会不涨？长沙的房价怎么那么低？</p><p>我们知道，北京的房子是全国有钱人买的，省会的房子是全省的有钱人买的。但是当省会城市距离一线大城市在 6 个小时高速以内，省里的有钱人的资金就会流向一线大城市，而不是省会。河北的富人一定会选择在北京投资房产，湖南的富人一定会选择广州深圳投资房产。</p><p>假设你是一个投资客，你去昆明旅行，发现昆明的房价甚至高过重庆，很不理解。你很疑惑昆明这么小的西部边陲城市投资价值在哪里？</p><p><strong>昆明是云南省内唯一的大城市，</strong>且相邻的二线以上城市离云南省都比较远。云南地州资源丰富，虽然穷人占的比例大，富人的数量却也不少。昆明南有滇池，北有长虫山，作为一个 700 万人口的城市，土地资源非常稀缺。所以贵，一定有贵的原因。便宜一定有便宜的道理。</p><p>问：楼主针对南昌的房价做个分析吗？从刚公布的 100 个城市房子均价看，南昌 5k 每平左右，是高了还是低了？</p><p>答：<strong>对于不了解的城市不敢妄下断言。没到现场调查就没有发言权啊。</strong>房价会不会涨还要看地方政府的规划。比如广州拥有大量的城中村，其周边有较多的大城市，广州的房价就比北京和上海低。如果广州的城中村一旦大规模拆迁，房价将会大幅上涨。比如南宁东盟贸易自由港的概念使南宁的房价涨幅惊人。南昌的地理位置，政府规划，发展前景，江西富裕人口的多少，都是决定房价的因素。</p><h2 id="我们是第二个日本吗"><a href="#我们是第二个日本吗" class="headerlink" title="我们是第二个日本吗"></a>我们是第二个日本吗</h2><p>供求关系？供求关系，现在是谁在决定？</p><p>国家！</p><p>国家的经济结构决定的。</p><p>制造业的资金都进入房地产了。能不涨吗？普通人有几个可以够炒房资格的？</p><p>— — — — — — — —</p><p>问：日本当初也是供求关系！供求关系的根本也不应脱离国家的经济实力！！还暴涨？怎么涨？再涨都够去美国买房了！！你这不扯淡么</p><p><strong>中国和日本最大的不同在于日本的货币是开放的，</strong>中国的不是，是不能自由兑换的。</p><p>暴涨是相对于钱而言的，不是相对于实际购买力而言的。</p><p>80 年代工资 200 多块钱一个月的时候，是不能想象 90 年代末北京城区 5000 每平米的房价的。那时候万元户已经是富人的代表了。</p><p>90 年代末工资 1000 块钱的时候是不能想象现在 30000 一平米的房价的。90年代的 100 万绝对是富裕群体。可现在连个中产都算不上。</p><p>货币的持续贬值你没有考虑。</p><p>— — — — — — — —</p><p>问：说真的！！楼主背后还有这么多信众。。。。真傻啊！中国的房地产，根本就是政府控制的！什么贵有贵的道理！国家投资那里，那里地价就高！国家决心打压地产！明天就能见效！！关键就看他愿不愿意打！</p><p>— — — — — — — —</p><p>秦始皇也是想怎么样就怎么样，结果国家没了。</p><p>李世民懂得按规律治理国家，所有才有贞观盛世。</p><p>— — — — — — — —</p><p>问：再反驳楼主一句！！在中国的土地，可不稀缺！只是没开发罢了！！中国与世界不同！ok？13 亿人！！用十三亿的居住权作为市场竞争的资本。那太可怕了！真的！！！如果可能，中国绝对可以产出世界第一贵的地价！为什么？这么多人需要房子。能不涨吗？呵呵！多少有点扯淡！！别再提供求关系了！供求根本是平衡的！！</p><p>中国有 13 亿人口，960 万平方公里土地，土地一点不稀缺。</p><p>但假设你在北京西城上班，让你去塔特拉马干买房子，你愿意去吗？</p><p>全国有点钱的都要在一线城市和省会城市买房子，所以才会稀缺。</p><p>大兴安岭有大量的土地，哪个有钱愿意跑去置业呢？</p><p>中国经济发展不平衡，牺牲全国大多数城市和乡村，来保证北上广深及大部分省会城市的繁荣才是造成土地稀缺的愿意。</p><p>土地有的是，房子有的是，但好位置的土地和房子并不多。</p><p>一方面大量的小县城和乡镇、村庄人口锐减，因为缺乏谋生手段不得不背景离乡外出打工，另一方面超大型城市越来越拥挤，土地资源越来越稀缺。【PS：还是那句话，土地位置与稀缺，绝定价值】</p><p>这就是中国集中发展极少数标杆城市所造成的呀，也是因为如此，才造成了中国金子塔式的收入结构，贫富差距越来越悬殊。</p><h2 id="民为何，官为何"><a href="#民为何，官为何" class="headerlink" title="民为何，官为何"></a>民为何，官为何</h2><p>很多人很疑惑，贪官越来越多，根本不把老百姓的利益放在心里，这些贪官即使被曝光了，还能继续当官。这是为什么呢？</p><p>首先了解一下老百姓，也就是民到底是什么？</p><p>民就是牛羊，古代的时候，官员管理百姓叫做牧。官员管理百姓就是替君主放牧，只要保证牛羊不逃跑，不骚乱，那么就是合格的官员。</p><p>秦始皇暴政，百姓揭竿而起，可是陈胜起事后基本视民众如草芥，项羽屠杀平民比始皇更残暴。</p><p>萧何是一个很贤德的人，对百姓很好，赢得了很高的名声。刘邦在广武山和项羽对峙，得知了萧何在关中深受百姓爱戴，就疑心萧何要造反。一个君主爱民如子是为了百姓的支持，江山永固，一个臣子对老百姓好是不是要造反呢？于是派人去调查萧何。</p><p>萧何是个聪明人，感觉到刘邦已经不信任他了。于是赶紧改变工作作风，开始霸占百姓的田产，上大街欺负漂亮的妇女同志，并且派自己的子女上前线给刘邦做人质。</p><p>刘邦看到了萧何的行为非常高兴，知道萧何不会造反就放心了。百姓不是牛羊是什么？</p><p>在红色高棉统治下的柬埔寨人，民连牛羊都不如呀。</p><p>波尔布特同志坚持共产主义的按需分配，取消了货币。于是市场经济完全没有了。群众完全变成了按阶级分配了。</p><p>阶级只分为两种，波尔布特老板及其打手是绝对的统治阶级，其他人为被统治阶级，也可以称为奴隶阶级。统治阶级对奴隶阶级不爽可以直接拿 ak47 突突。</p><p>柬全国 700 万人口被波老板突突死了 100 万，当然不光是突突，还有活埋。</p><p>以至于越南派了 10 万军队侵略柬埔寨，受到了柬埔寨人民的夹道欢迎，称为解放人类的战争。</p><p>公道自在人心。【PS：人心其实并不准确，应该说公道自在民心，自古如此，民众基数太大，只有他们的力量才是无限的】</p><p>我们的今天本来就是历史的延续，前人经验和智慧的总结，不是一句话就可以抹杀的。</p><p>因为秦以后漫长帝国时代的大一统，才会把中央集权延续到现在。</p><p>而西方封建时代延续到地理大发现，诸侯割据王国、公国、侯国林立为现代的西方提供了民主制度的可能。</p><p>在制度上完全的不可比性，使向国际接轨成为了笑话。</p><p>我们看到的结果就是，物价上涨与西方接轨，甚至堂而皇之的超过西方，体制外的工资则与非洲结果，也算是国际化了。</p><p>— — — — — — — —</p><p>问：大家听过那个西三旗的有名的限价房旗胜家园吧！外表看起来那么光鲜，地段也不是特别偏，紧邻城铁，当然是被人疯抢都抢不到的两限房呀~！还不是质量问题一大堆。政府安排的政策房也是要开发商建的，哪个开发商没肉吃还能保证把房子盖好？？所谓检测都 TMD 是虚的。</p><p>— — — — — — — —</p><p>这是肯定的，开发商都追求利润最大化。</p><p>政府建设两限房限制开发商利润，开发商必然偷工减料，政府都知道怎么回事，必须睁一只眼闭一只眼，否则这个政策就执行不下去了</p><p>对于渴望拥有一套产权住房的都市小白领对希望房价狂降已经到了歇斯底里的程度，他们赞成农产品价格放开，让资金炒作农产品，而离开房地产市场。</p><p>理由很简单，一套房子一涨就是几十万甚至上百万，而大米小麦，一斤就算涨到 10 块，也根本不能影响到自己的生活质量。</p><p>如果我国农产品价格是开放的，资金流向大米、小麦、猪肉，并且允许囤积，房地产一定会下跌的，这是毫无疑问的。</p><p>但是，我们看到的绝不是 10 块钱一斤的大米、小麦，而是 500 块钱、1000 块钱一斤的大米、小麦。</p><p>我国将会出现大面积的饥荒，几千万甚至上亿的底层人士饿死街头，社会将出现大的动荡。【PS：无论哪个时代，粮食永远是第一位，民以食为天，国以民为本】</p><p>而产权房屋价格的上涨牺牲的主体只是体制外部分都市白领的利益，换来的不过是网络上没完没了的牢骚和咒骂。</p><p>巨量资金必须有地方去，如今面临的房地产和农产品之间的选择，你认为政府会怎么做？</p><p>体制内中层、高层可以分到多套福利房，低层至少能够分到一套保障房，即使最不重要部门的底层员工，搞到由单位补贴的公租房是没有问题的。</p><p>体制外的高层、中层，以他们的资金实力买多套房子都是不成问题的。</p><p>农民，分配有宅基地。国家要稳定，首先就是要农民稳定，因此我国只有农民能够分到土地自己盖房子。</p><p>军人，会享受到比公务员更好的福利，让军人享受更高标准的福利待遇，国家有深刻的认识。</p><p>那么只有体制外的都市中下层群众才是高房价的受害者，可是这个群体的地位真的很微不足道。</p><p>这些既无稳定工作（低层都市白领失业的概率还是蛮大的）又无自己的房产的都市小白领是金子塔底层被压榨的对象，甚至远远不如交通便利地区的农民。</p><p>没有这个群体的存在，金字塔上层的权贵是无法享受舒适的生活的。</p><p><strong>社会需要底层群体用巨大的付出和极少的收获为金字塔上层群体服务。</strong></p><p>当然，在巨大的付出后，有少数人会从低层脱颖而出，爬到金子塔的中层、甚至上层。</p><p>这些少数人带给了底层群体奋斗的希望。</p><p>拥有一套属于自己产权的房子，就只有一条路：从金字塔的底层往上爬。这条路很艰辛，并且会越来越艰辛，但总有希望。</p><p>— — — — — — — —</p><p>问：楼主有一点没说透彻，那就是白领的工资普遍较高，他们有能力买房子，但是受到几千年以来的小农经济思想的约束，他们普遍认为买房子不划算，占便宜心里普遍严重，别看他们外表光鲜，其实还都是一帮农民</p><p>— — — — — — — —</p><p>我说的是买不起房的低收入小白领。</p><p>高薪白领不买房的不多吧，都是网上吹的吧。</p><p>高薪白领一般还是有自住房的，只是有人不愿意投资房产。每个人想法不同而已。</p><p>— — — — — — — —</p><p>问：请问楼主所说的低薪白领一个月赚多少钱算底薪？就拿我说吧，我 06 年买的房子，当时月薪 3000 元，这在当时算不算低薪？但是我买房了，还是一个人买的，当然老爸赞助了点。每个月还完月供兜里就剩几十元，硬扛下来了。目前年薪 12 万，我老婆年薪 6 万？这算不算高薪？如果我当时没买房子，以我们 2 个人的收入当下也买的起，只不过生活负担重一些。所以请楼主明示，什么是低薪？</p><p>— — — — — — — —</p><p>兄弟，你所描述的是另外一个问题。先说说你所说的这个问题，再谈谈什么叫低薪。</p><p>先说 06 年你月薪 3000 买房子的问题。</p><p>我们打一个比方：</p><p>假设 80 年代，咱们两个月薪都是 100 块。你喜欢清朝的瓷盘子，咬咬牙，一年用好不容易攒下的 100 块钱买了清朝瓷盘子。我喜欢缝纫机，用一年好不容易攒的钱买了一个缝纫机。</p><p>市场有价值发现功能。显然，80 年代清代瓷盘子的价值没有得到发现。进入 90 年代，随着社会的发展，社会财富的增加，钞票也大幅度增加。清代瓷盘子的市场价值发现出来了，瓷盘子价格开始大幅上涨，你的瓷盘子由 100 块涨到 1000 块。而我买的缝纫机已经淘汰了。</p><p>瓷盘子具备投资品的一切属性，能够吸收社会的富裕资金，而缝纫机没有这个功能。我很眼红，我虽然买的起这个瓷盘子（因为 90 年代我的工资由 100 涨 到了 800），但是我觉得价格太高了，没有买。而你的瓷盘子在 90 年代为你挣了 900 元钱。</p><p>时光又到 21 世纪，社会资金越来越多，钞票越印越多，可瓷盘子在市场上越来越少（都被收藏了），于是瓷盘子涨到了 1 千万一个，我即使想买瓷盘子再也买不起了，而不是嫌价格高的问题。而你已经成为了千万富翁。那个瓷盘子也并没有因为 1 千万的价格实在太高而暴跌，相反价格仍以每年 20% 的速度增长。</p><p>06 年你在房价价值发现的初期买了房子，就像 90 年代你用 1000 块买清代瓷盘子。如果你的工资不变，或者变化不足够大，现在你将买不起房子，就像你在 21 世纪不可能买的起瓷盘子。</p><h2 id="收、入高低"><a href="#收、入高低" class="headerlink" title="收、入高低"></a>收、入高低</h2><p>再说说收入高低，不同城市，不同消费水平，对收入高低有着不同的理解。</p><p>我们举北京为例。</p><p>反映真实居住成本的是房屋租金，而不是房价。</p><p>在北京生活，一家三口的通常情况。</p><p>一个位置能够满足上班条件的两居室租金大约 3000 元，小孩花费没有 3000 块是下不来的，再加上夫妻俩 2000 元的基本生活花费，也就是说 8000 月收入的 家庭，刚好能达到收支平衡。</p><p>如果是体制外的都市白领，这个收入是很可怜的，因为还要考虑到失业问题，</p><p>并且应付万一发生的意外支出。所以每月能有 2000 元的结余是必须的，那么 10000 元是在北京生活的基本水平。</p><p>而购买商品房所支付的金钱是要远高于租金成本的，因为你买的不是房屋居住权，而是房屋的产权，一定会出现溢价。</p><p>如果你现在的家庭收入能够再买得起一套房子，那么你的收入水平应该至少是小康，甚至达到中产。</p><p>— — — — — — — —</p><p>问：楼主啊，你有一个概念错误：清代的瓷盘子是收藏品是古董，其价值是由拥有瓷盘子的收藏家决定的，而房子是商品（我指的是商品房，不是公租房之类的保障房），其价值远没有古董增值速度快，所以说收藏品和商品是有区别的。</p><p>— — — — — — — —</p><p>呵呵，商品房当然和清代磁盘是不同的，升值空间不同，投资对象也不同，但价值发现的道理是一样的。投资品的基本属性：稀缺性是共有的，当然稀缺的程度不同。</p><p>我所讲的是投资品的价值发现，而不是商品房&#x3D;清代瓷盘。</p><p>— — — — — — — —</p><p>问：此外，您还没有正面回答我什么是低薪，我今年 30 多岁，如果我刚毕业肯定是拿底薪的，往最坏了想，我毕业几年到今年混的不好，今年只赚 3000 元一个月，我就买不起房么？如果你觉得是，那么你错了，我仍然可以买的起，我会到比较偏远的地段去买房子，比如密云，延庆等买套小户型二手房，那里的房价我仍然可以支付月供，当然我还是要像老爸要点钱付首付的。可是如果我不这么想，觉得去哪里不划算，在四环里买房子多好啊！那么我可能就买不起了，因为在四环里买房已经超出了我的能力，那么请问我买不起四环里的房子是房价的问题呢还是我的问题呢？是不是说我买不起四环里的房子就是我买不起房？</p><p>— — — — — — — —</p><p>如果我们买首套房，不是为了投资。我们买房总有个基本的要求：</p><p>有一个自己的家，并且上班相对方便。</p><p>如果你在长城饭店上班，你跑去密云买个房子。首先你上班就成问题。</p><p>如果我月薪 3000 块，我甚至不能在密云买房子（因为也上万了），但我可以在山西的某个县城买套房子。问题是我买这套房子干什么？</p><p>— — — — — — — —</p><p>问：我的中心思想是：北京的白领普遍买的起房子，但是有一部分不买，其原因是想花最少的钱去获得最好的地段，最好的楼层，最好的朝向的房子，这是划算不划算的问题，不是买得起买不起的问题，当然有的人会说：买房了，得病了怎么办？失业了怎么办？一大堆怎么办！那么请问：既然你知道早晚要见马克思，为什么现在还活着啊？一刀了断了算了，呵呵</p><p>— — — — — — — —</p><p>你说的这类人其实是因为贪婪和恐惧，幸运不会垂青即贪婪又恐惧的人。用天涯的语言来说：就是传说中的傻空。</p><p>— — — — — — — —</p><p>问：楼主，一对有工作经验的年轻的北京白领夫妻月收入只有 8000 元？这 是怎么统计的？您的统计结果不准啊，我的结论是 10000-12000 元&#x2F;月是北京标准的白领夫妻的月收入，那么这笔钱能不能买房子？能，能不能付首付？可能不能，首付款怎么来的？一部分是父母赞助的。作为父母就要把自己的孩子扶上马，再送一程，这和啃老没关系。</p><p>— — — — — — — —</p><p>呵呵，这个也不好这么说，不同行业间的薪水差距实在太大了。</p><p>比如一个有 6、7 年职业学校的教师或者一个有 5、6 年电脑分销经验的产品经理（都是大学毕业），他们辛辛苦苦干一年多点的也就 7、8 万块。他们都不晓得招商银行随便一个客户经理轻轻松松年薪几十万。</p><p>同是大学毕业，同是 5、6 年工作经验，北京几十万年薪收入的人不少，但一个月只挣 3、4000 块的数量更庞大。</p><p>— — — — — — — —</p><p>问：房价是由土地决定的，而土地是咱们这个国家的根本，当年不就因为要改变土地的属性，才有了我们的党。凡房屋也都是只有土地的使用权，土地属于国家，说收回的话不管你有无房证更不会和住房者商量（如拆迁），这个性质绝不变，想下，对有房者如此，会为了没有房子的而制定均衡均分的土地政策下降房价吗？现在贫富分化越来越严重，真买的起房的考虑的重点不会是贷款，买不起的，房价跌去三分之一也还是买不起，不要看政府如何了，如果能少贷款或不贷款买处房的话就买吧，人早晚得有个安身之所，不要贪大求全，战争或地震来了房子不值钱，但万一战争或地震不来呢？</p><p>— — — — — — — —</p><p>没错，就是这个意思，如果战争来临，你手中的钱也变成废纸。</p></div><div class="tab-pane" id="tab_58-2"><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;人人都有居住权。房子是用来住的，不是用来炒的。</div><div class="body"><p>如果大家都这么想就好了，就不会有炒房客这个职业了。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;房价不是由统计局的平均收入决定的。而是精英的平均收入决定的。</div><div class="body"><p>21 年的新闻，腾讯应届生房补每月涨至 4000 元，南山区房东笑了：该涨房租了！</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;我们的统计原则基本就是：村骗乡，乡骗县，一骗骗到国务院。</div><div class="body"><p>从疫情期间的统计就能窥见一二。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;真正可怕的是官员一方面谋取私利一方面把亲属和存款送到国外，这其实是一种国家背叛。</div><div class="body"><p>今生无悔入华夏，家住加利福尼亚。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;如果真的收房产税，采用不公平法则的可能性最大。</div><div class="body"><p>真收房产税了，苦恼的一个是房东，一个就是租户了，房东被收税，自然成本就要摊到租户身上了。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;我们感受最深的就是涨工资的问题，一旦政府涨工资，那就一定是体制内涨工资，跟体制外完全没有关系。</div><div class="body"><p>2024 年全国退休人员基本养老金提高 3% 喔，我还有 40 年才能退休呢。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;降低百姓租房困难的唯一国际通行办法就是减税。</div><div class="body"><p>不扣税哪来的退休金呢。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;但凡出现公务员增加，必定是因为福利太好了。</div><div class="body"><p>KK 大神没想到的是，现在大环境不好，考公人多了，大家更趋向于稳定了。</p></div></div><div class="tag-plugin colorful note" ><div class="title">📝&nbsp;社会需要底层群体用巨大的付出和极少的收获为金字塔上层群体服务。</div><div class="body"><p>这个很一针见血，虽然不想承认，但这就是事实，大部分人都是牛马的一生。</p></div></div></div></div></div>]]></content>
    
    
    <summary type="html">天涯神贴 KK 大神三部曲的第一部</summary>
    
    
    
    <category term="读书笔记" scheme="https://blog.felicx.eu.org/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="天涯神贴" scheme="https://blog.felicx.eu.org/tags/%E5%A4%A9%E6%B6%AF%E7%A5%9E%E8%B4%B4/"/>
    
  </entry>
  
  <entry>
    <title>CANape 之快速上手</title>
    <link href="https://blog.felicx.eu.org/1037199537.html"/>
    <id>https://blog.felicx.eu.org/1037199537.html</id>
    <published>2024-07-11T14:44:32.000Z</published>
    <updated>2024-07-13T02:29:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CANape 是一款用于 ECU 测量、标定、诊断以及 ADAS 传感器数据采集的工具型软件。搞车载总是离不开 CANape，这里也做个记录，方便自己后面遗忘了，导致用起来费时费事。</p><h2 id="使用准备"><a href="#使用准备" class="headerlink" title="使用准备"></a>使用准备</h2><p>CANape 使用的前提条件是需要 License。只有连接设备与电脑，通过电脑识别查看 License，激活相关 license，这样 CANape 才能正常使用。</p><h3 id="License-获取"><a href="#License-获取" class="headerlink" title="License 获取"></a>License 获取</h3><p>License 有几种，一种是硬件设备自带 License，一种是 Vector 会提供 Activation Key，通过 Vector License Client 就可以激活。这里不过多赘述（都要花钱的）。</p><h3 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h3><p>CANape 使用的前提是需要硬件设备 VN1630A 或 1640A 等。针对这些设备，需要安装相对应的驱动才能正常使用。</p><p><img src="/assets/post/20240714_3nOikFLF.webp" alt="img"></p><p>运行驱动安装包，选择已有硬件的驱动进行安装，如下所示：</p><p><img src="/assets/post/20240714_cgGY3qwu.webp" alt="img"></p><p>如果没有安装驱动或者安装不正确，则硬件盒的状态灯亮红色，如下所示；安装成功，则硬件盒的状态灯亮绿色。</p><p><img src="/assets/post/20240714_0MwBK2Dl.webp" alt="img"></p><p>状态灯正常了，但是所使用的通道指示灯仍然为红色，如何变成绿色？ 跳到下面看『硬件通道配置』。</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h3><p>首先打开软件，点击 Devices -&gt; New Device，给工程命名，选择存放路径、A2L 和 elf 文件；<br>然后点击 Devices -&gt; New from database -&gt; database，选择 A2l 文件，硬件设备和通道，关联 A2L 和 elf 文件。</p><p><img src="/assets/post/20240714_cFUxjbJD.webp" alt="img"></p><h3 id="测量配置"><a href="#测量配置" class="headerlink" title="测量配置"></a>测量配置</h3><p>点击 Start -&gt; Measurement configuration，配置所需观测或变量的信号，比如观测量的观测周期等信息；</p><p><img src="/assets/post/20240714_WmzNNKe1.webp" alt="img"><br>然后在图形页面添加观测量和标定量，选择相应的显示形式，比如数值格式或图形格式等。</p><p><img src="/assets/post/20240714_OBZcDYhA.webp" alt="img"></p><h2 id="硬件通道配置"><a href="#硬件通道配置" class="headerlink" title="硬件通道配置"></a>硬件通道配置</h2><p>使用到的通道指示灯亮红色，原因是 CANape 硬件未配置或配置不正确。硬件通道配置有三个关键点：</p><h3 id="第一点"><a href="#第一点" class="headerlink" title="第一点"></a>第一点</h3><p>在 Hardware Config 中，选择正确的软硬件通道映射关系，根据硬件设备的实际使用情况来设置，使用 Channel1 则按下图所示配置：</p><p><img src="/assets/post/20240714_ArgEe9xj.webp" alt="img"></p><h3 id="第二点"><a href="#第二点" class="headerlink" title="第二点"></a>第二点</h3><p>在 Device configuration -&gt; Transport Layer 中：</p><ul><li>首先是 CAN 总线参数设置，需要根据实际的 XCP 基于的通讯协议来设置，如果是 CAN 通讯，要确定是 CAN 还是 CAN FD，其波特率是多少。</li><li>然后是通讯的 ID，也需要根据实际情况来，注意这里的 Master是指上位机，相当于CANape 端，Slave 是指所连接的 ECU，因此从 ECU 角度来说，CAN ID Master 就是 ECU 的接收 ID，而 CAN ID Slave 就是 ECU 的发送 ID。</li><li>最后就是长度 DLC，Max DLC required 是否勾选，若需要勾选但不勾选，亲验会影响通道指示灯的状态。<br><img src="/assets/post/20240714_B2Mjv6p6.webp" alt="img"></li></ul><h3 id="第三点"><a href="#第三点" class="headerlink" title="第三点"></a>第三点</h3><p>在最初新建 New Device 时，当在前面选定了基于 CAN 的 XCP 后，到下图所示的这一页要注意 CAN 类型的选择，默认是 CAN，但如果是 CAN FD，那么需要选择 New network；</p><p><img src="/assets/post/20240714_sbG173VD.webp" alt="img"><br>然后选择正确的硬件通道，在 CAN Bus Parameter 处，点击 Change…；</p><p><img src="/assets/post/20240714_BQaGDMcJ.webp" alt="img"><br>选择 ISO CAN FD，设置正确的波特率和采样点即可。</p><p><img src="/assets/post/20240714_BJQj88K5.webp" alt="img"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上三个点中，个人感受第三个点最容易被忽视，而这点配置不对就会导致无法建立正确的通讯，通道指示灯一直为红色。这点配置结果其实在 Device configuration 中 的 Device 是没有 CAN FD 的选项的。</p><p><img src="/assets/post/20240714_59PApALq.webp" alt="img"></p><p>此时若要正确配置，需要重新对上述的第三点进行配置。一方面在 Device configuration 中的 Device 有了 CAN FD 的选项，且可以更新波特率和采样点信息。另一方面硬件盒子的通道指示灯就从红转绿，通讯能够建立。</p><p><img src="/assets/post/20240714_vHkDJiQS.webp" alt="img"></p><p>更具体地可以实际测试通讯是否建立。在 Device Configuration -&gt; Protocol 中点击 Test connection，一切硬件通道配置成功，则会显示 Communication established。</p><p><img src="/assets/post/20240714_ZLNZJuva.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">快速上手 CANape，主要是工程建立和配置</summary>
    
    
    
    <category term="自动驾驶" scheme="https://blog.felicx.eu.org/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
    <category term="can" scheme="https://blog.felicx.eu.org/tags/can/"/>
    
    <category term="canape" scheme="https://blog.felicx.eu.org/tags/canape/"/>
    
  </entry>
  
</feed>
